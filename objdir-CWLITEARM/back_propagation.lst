   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"back_propagation.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.d_identity,"ax",%progbits
  16              		.align	1
  17              		.global	d_identity
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	d_identity:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "back_propagation.c"
   1:back_propagation.c **** /*
   2:back_propagation.c **** Author: Manohar Mukku
   3:back_propagation.c **** Date: 23.07.2018
   4:back_propagation.c **** Desc: Backpropagation in C
   5:back_propagation.c **** GitHub: https://github.com/manoharmukku/multilayer-perceptron-in-c
   6:back_propagation.c **** */
   7:back_propagation.c **** 
   8:back_propagation.c **** #include "back_propagation.h"
   9:back_propagation.c **** 
  10:back_propagation.c **** void d_identity(int layer_size, double* layer_input, double* layer_output, double* layer_derivative
  28              		.loc 1 10 102 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  11:back_propagation.c ****     int i;
  32              		.loc 1 11 5 view .LVU1
  12:back_propagation.c ****     for (i = 0; i < layer_size; i++)
  33              		.loc 1 12 5 view .LVU2
  10:back_propagation.c ****     int i;
  34              		.loc 1 10 102 is_stmt 0 view .LVU3
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  13:back_propagation.c ****         layer_derivative[i] = 1;
  41              		.loc 1 13 29 view .LVU4
  42 0002 054D     		ldr	r5, .L4
  43 0004 083B     		subs	r3, r3, #8
  44              	.LVL1:
  12:back_propagation.c ****     for (i = 0; i < layer_size; i++)
  45              		.loc 1 12 12 view .LVU5
  46 0006 0022     		movs	r2, #0
  47              	.LVL2:
  48              		.loc 1 13 29 view .LVU6
  49 0008 0024     		movs	r4, #0
  50              	.LVL3:
  51              	.L2:
  12:back_propagation.c ****     for (i = 0; i < layer_size; i++)
  52              		.loc 1 12 17 is_stmt 1 discriminator 1 view .LVU7
  12:back_propagation.c ****     for (i = 0; i < layer_size; i++)
  53              		.loc 1 12 5 is_stmt 0 discriminator 1 view .LVU8
  54 000a 8242     		cmp	r2, r0
  55 000c 00DB     		blt	.L3
  14:back_propagation.c **** }
  56              		.loc 1 14 1 view .LVU9
  57 000e 30BD     		pop	{r4, r5, pc}
  58              	.L3:
  13:back_propagation.c ****         layer_derivative[i] = 1;
  59              		.loc 1 13 9 is_stmt 1 discriminator 3 view .LVU10
  13:back_propagation.c ****         layer_derivative[i] = 1;
  60              		.loc 1 13 29 is_stmt 0 discriminator 3 view .LVU11
  61 0010 E3E90245 		strd	r4, [r3, #8]!
  12:back_propagation.c ****         layer_derivative[i] = 1;
  62              		.loc 1 12 33 is_stmt 1 discriminator 3 view .LVU12
  12:back_propagation.c ****         layer_derivative[i] = 1;
  63              		.loc 1 12 34 is_stmt 0 discriminator 3 view .LVU13
  64 0014 0132     		adds	r2, r2, #1
  65              	.LVL4:
  12:back_propagation.c ****         layer_derivative[i] = 1;
  66              		.loc 1 12 34 discriminator 3 view .LVU14
  67 0016 F8E7     		b	.L2
  68              	.L5:
  69              		.align	2
  70              	.L4:
  71 0018 0000F03F 		.word	1072693248
  72              		.cfi_endproc
  73              	.LFE3:
  75              		.global	__aeabi_dsub
  76              		.global	__aeabi_dmul
  77              		.section	.text.d_sigmoid,"ax",%progbits
  78              		.align	1
  79              		.global	d_sigmoid
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	d_sigmoid:
  86              	.LVL5:
  87              	.LFB4:
  15:back_propagation.c **** 
  16:back_propagation.c **** void d_sigmoid(int layer_size, double* layer_input, double* layer_output, double* layer_derivative)
  88              		.loc 1 16 101 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  17:back_propagation.c ****     int i;
  92              		.loc 1 17 5 view .LVU16
  18:back_propagation.c ****     for (i = 0; i < layer_size; i++)
  93              		.loc 1 18 5 view .LVU17
  16:back_propagation.c ****     int i;
  94              		.loc 1 16 101 is_stmt 0 view .LVU18
  95 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 40
  98              		.cfi_offset 3, -40
  99              		.cfi_offset 4, -36
 100              		.cfi_offset 5, -32
 101              		.cfi_offset 6, -28
 102              		.cfi_offset 7, -24
 103              		.cfi_offset 8, -20
 104              		.cfi_offset 9, -16
 105              		.cfi_offset 10, -12
 106              		.cfi_offset 11, -8
 107              		.cfi_offset 14, -4
  19:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 108              		.loc 1 19 56 view .LVU19
 109 0004 DFF83C90 		ldr	r9, .L9
  16:back_propagation.c ****     int i;
 110              		.loc 1 16 101 view .LVU20
 111 0008 8246     		mov	r10, r0
 112 000a 1446     		mov	r4, r2
 113 000c A3F10805 		sub	r5, r3, #8
  18:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 114              		.loc 1 18 12 view .LVU21
 115 0010 4FF0000B 		mov	fp, #0
 116              		.loc 1 19 56 view .LVU22
 117 0014 4FF00008 		mov	r8, #0
 118              	.LVL6:
 119              	.L7:
  18:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 120              		.loc 1 18 17 is_stmt 1 discriminator 1 view .LVU23
  18:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 121              		.loc 1 18 5 is_stmt 0 discriminator 1 view .LVU24
 122 0018 D345     		cmp	fp, r10
 123 001a 01DB     		blt	.L8
  20:back_propagation.c **** }
 124              		.loc 1 20 1 view .LVU25
 125 001c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 126              	.LVL7:
 127              	.L8:
  19:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 128              		.loc 1 19 9 is_stmt 1 discriminator 3 view .LVU26
  19:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 129              		.loc 1 19 43 is_stmt 0 discriminator 3 view .LVU27
 130 0020 F4E90267 		ldrd	r6, [r4, #8]!
  19:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 131              		.loc 1 19 56 discriminator 3 view .LVU28
 132 0024 4046     		mov	r0, r8
 133 0026 3246     		mov	r2, r6
 134 0028 3B46     		mov	r3, r7
 135 002a 4946     		mov	r1, r9
 136 002c FFF7FEFF 		bl	__aeabi_dsub
 137              	.LVL8:
  19:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 138              		.loc 1 19 49 discriminator 3 view .LVU29
 139 0030 3246     		mov	r2, r6
 140 0032 3B46     		mov	r3, r7
 141 0034 FFF7FEFF 		bl	__aeabi_dmul
 142              	.LVL9:
  18:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 143              		.loc 1 18 34 discriminator 3 view .LVU30
 144 0038 0BF1010B 		add	fp, fp, #1
 145              	.LVL10:
  19:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 146              		.loc 1 19 29 discriminator 3 view .LVU31
 147 003c E5E90201 		strd	r0, [r5, #8]!
  18:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 148              		.loc 1 18 33 is_stmt 1 discriminator 3 view .LVU32
 149              	.LVL11:
  18:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
 150              		.loc 1 18 33 is_stmt 0 discriminator 3 view .LVU33
 151 0040 EAE7     		b	.L7
 152              	.L10:
 153 0042 00BF     		.align	2
 154              	.L9:
 155 0044 0000F03F 		.word	1072693248
 156              		.cfi_endproc
 157              	.LFE4:
 159              		.section	.text.d_tanh,"ax",%progbits
 160              		.align	1
 161              		.global	d_tanh
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	d_tanh:
 168              	.LVL12:
 169              	.LFB5:
  21:back_propagation.c **** 
  22:back_propagation.c **** void d_tanh(int layer_size, double* layer_input, double* layer_output, double* layer_derivative) {
 170              		.loc 1 22 98 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
  23:back_propagation.c ****     int i;
 174              		.loc 1 23 5 view .LVU35
  24:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 175              		.loc 1 24 5 view .LVU36
  22:back_propagation.c ****     int i;
 176              		.loc 1 22 98 is_stmt 0 view .LVU37
 177 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 32
 180              		.cfi_offset 3, -32
 181              		.cfi_offset 4, -28
 182              		.cfi_offset 5, -24
 183              		.cfi_offset 6, -20
 184              		.cfi_offset 7, -16
 185              		.cfi_offset 8, -12
 186              		.cfi_offset 9, -8
 187              		.cfi_offset 14, -4
  25:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 188              		.loc 1 25 35 view .LVU38
 189 0004 DFF83890 		ldr	r9, .L14
  22:back_propagation.c ****     int i;
 190              		.loc 1 22 98 view .LVU39
 191 0008 0646     		mov	r6, r0
 192 000a 1446     		mov	r4, r2
 193 000c A3F10805 		sub	r5, r3, #8
  24:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 194              		.loc 1 24 12 view .LVU40
 195 0010 0027     		movs	r7, #0
 196              		.loc 1 25 35 view .LVU41
 197 0012 4FF00008 		mov	r8, #0
 198              	.LVL13:
 199              	.L12:
  24:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 200              		.loc 1 24 17 is_stmt 1 discriminator 1 view .LVU42
  24:back_propagation.c ****     for (i = 0; i < layer_size; i++)
 201              		.loc 1 24 5 is_stmt 0 discriminator 1 view .LVU43
 202 0016 B742     		cmp	r7, r6
 203 0018 01DB     		blt	.L13
  26:back_propagation.c **** }
 204              		.loc 1 26 1 view .LVU44
 205 001a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 206              	.LVL14:
 207              	.L13:
  25:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 208              		.loc 1 25 9 is_stmt 1 discriminator 3 view .LVU45
  25:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 209              		.loc 1 25 49 is_stmt 0 discriminator 3 view .LVU46
 210 001e F4E90223 		ldrd	r2, [r4, #8]!
  25:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 211              		.loc 1 25 55 discriminator 3 view .LVU47
 212 0022 1046     		mov	r0, r2
 213 0024 1946     		mov	r1, r3
 214 0026 FFF7FEFF 		bl	__aeabi_dmul
 215              	.LVL15:
 216 002a 0246     		mov	r2, r0
 217 002c 0B46     		mov	r3, r1
  25:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 218              		.loc 1 25 35 discriminator 3 view .LVU48
 219 002e 4046     		mov	r0, r8
 220 0030 4946     		mov	r1, r9
 221 0032 FFF7FEFF 		bl	__aeabi_dsub
 222              	.LVL16:
  24:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 223              		.loc 1 24 34 discriminator 3 view .LVU49
 224 0036 0137     		adds	r7, r7, #1
 225              	.LVL17:
  25:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 226              		.loc 1 25 29 discriminator 3 view .LVU50
 227 0038 E5E90201 		strd	r0, [r5, #8]!
  24:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 228              		.loc 1 24 33 is_stmt 1 discriminator 3 view .LVU51
 229              	.LVL18:
  24:back_propagation.c ****         layer_derivative[i] = 1.0 - layer_output[i+1] * layer_output[i+1];
 230              		.loc 1 24 33 is_stmt 0 discriminator 3 view .LVU52
 231 003c EBE7     		b	.L12
 232              	.L15:
 233 003e 00BF     		.align	2
 234              	.L14:
 235 0040 0000F03F 		.word	1072693248
 236              		.cfi_endproc
 237              	.LFE5:
 239              		.global	__aeabi_dcmpgt
 240              		.global	__aeabi_dcmplt
 241              		.section	.text.d_relu,"ax",%progbits
 242              		.align	1
 243              		.global	d_relu
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu softvfp
 249              	d_relu:
 250              	.LVL19:
 251              	.LFB6:
  27:back_propagation.c **** 
  28:back_propagation.c **** void d_relu(int layer_size, double* layer_input, double* layer_output, double* layer_derivative) {
 252              		.loc 1 28 98 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
  29:back_propagation.c ****     int i;
 256              		.loc 1 29 5 view .LVU54
  30:back_propagation.c ****     for (i = 0; i < layer_size; i++) {
 257              		.loc 1 30 5 view .LVU55
  28:back_propagation.c ****     int i;
 258              		.loc 1 28 98 is_stmt 0 view .LVU56
 259 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 40
 262              		.cfi_offset 3, -40
 263              		.cfi_offset 4, -36
 264              		.cfi_offset 5, -32
 265              		.cfi_offset 6, -28
 266              		.cfi_offset 7, -24
 267              		.cfi_offset 8, -20
 268              		.cfi_offset 9, -16
 269              		.cfi_offset 10, -12
 270              		.cfi_offset 11, -8
 271              		.cfi_offset 14, -4
  28:back_propagation.c ****     int i;
 272              		.loc 1 28 98 view .LVU57
 273 0004 8246     		mov	r10, r0
 274 0006 1C46     		mov	r4, r3
 275 0008 A1F10805 		sub	r5, r1, #8
 276              		.loc 1 30 12 view .LVU58
 277 000c 4FF0000B 		mov	fp, #0
  31:back_propagation.c ****         if (layer_input[i] > 0)
 278              		.loc 1 31 12 view .LVU59
 279 0010 0026     		movs	r6, #0
 280 0012 0027     		movs	r7, #0
 281              	.LVL20:
 282              	.L17:
  30:back_propagation.c ****     for (i = 0; i < layer_size; i++) {
 283              		.loc 1 30 17 is_stmt 1 discriminator 1 view .LVU60
  30:back_propagation.c ****     for (i = 0; i < layer_size; i++) {
 284              		.loc 1 30 5 is_stmt 0 discriminator 1 view .LVU61
 285 0014 D345     		cmp	fp, r10
 286 0016 01DB     		blt	.L23
  32:back_propagation.c ****             layer_derivative[i] = 1;
  33:back_propagation.c ****         else if (layer_input[i] < 0)
  34:back_propagation.c ****             layer_derivative[i] = 0;
  35:back_propagation.c ****         else // derivative does not exist
  36:back_propagation.c ****             layer_derivative[i] = 0.5; // giving arbitrary value
  37:back_propagation.c ****     }
  38:back_propagation.c **** }
 287              		.loc 1 38 1 view .LVU62
 288 0018 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 289              	.LVL21:
 290              	.L23:
  31:back_propagation.c ****         if (layer_input[i] > 0)
 291              		.loc 1 31 9 is_stmt 1 view .LVU63
  31:back_propagation.c ****         if (layer_input[i] > 0)
 292              		.loc 1 31 24 is_stmt 0 view .LVU64
 293 001c F5E90289 		ldrd	r8, [r5, #8]!
  31:back_propagation.c ****         if (layer_input[i] > 0)
 294              		.loc 1 31 12 view .LVU65
 295 0020 0022     		movs	r2, #0
 296 0022 0023     		movs	r3, #0
 297 0024 4046     		mov	r0, r8
 298 0026 4946     		mov	r1, r9
 299 0028 FFF7FEFF 		bl	__aeabi_dcmpgt
 300              	.LVL22:
 301 002c 20B1     		cbz	r0, .L26
  32:back_propagation.c ****             layer_derivative[i] = 1;
 302              		.loc 1 32 13 is_stmt 1 view .LVU66
  32:back_propagation.c ****             layer_derivative[i] = 1;
 303              		.loc 1 32 33 is_stmt 0 view .LVU67
 304 002e 0A4B     		ldr	r3, .L29
 305 0030 0022     		movs	r2, #0
 306              	.L28:
  36:back_propagation.c ****     }
 307              		.loc 1 36 33 view .LVU68
 308 0032 C4E90023 		strd	r2, [r4]
 309 0036 08E0     		b	.L20
 310              	.L26:
  33:back_propagation.c ****             layer_derivative[i] = 0;
 311              		.loc 1 33 14 is_stmt 1 view .LVU69
  33:back_propagation.c ****             layer_derivative[i] = 0;
 312              		.loc 1 33 17 is_stmt 0 view .LVU70
 313 0038 3246     		mov	r2, r6
 314 003a 3B46     		mov	r3, r7
 315 003c 4046     		mov	r0, r8
 316 003e 4946     		mov	r1, r9
 317 0040 FFF7FEFF 		bl	__aeabi_dcmplt
 318              	.LVL23:
 319 0044 28B1     		cbz	r0, .L27
  34:back_propagation.c ****         else // derivative does not exist
 320              		.loc 1 34 13 is_stmt 1 view .LVU71
  34:back_propagation.c ****         else // derivative does not exist
 321              		.loc 1 34 33 is_stmt 0 view .LVU72
 322 0046 C4E90067 		strd	r6, [r4]
 323              	.L20:
  30:back_propagation.c ****         if (layer_input[i] > 0)
 324              		.loc 1 30 33 is_stmt 1 discriminator 2 view .LVU73
  30:back_propagation.c ****         if (layer_input[i] > 0)
 325              		.loc 1 30 34 is_stmt 0 discriminator 2 view .LVU74
 326 004a 0BF1010B 		add	fp, fp, #1
 327              	.LVL24:
  30:back_propagation.c ****         if (layer_input[i] > 0)
 328              		.loc 1 30 34 discriminator 2 view .LVU75
 329 004e 0834     		adds	r4, r4, #8
 330 0050 E0E7     		b	.L17
 331              	.L27:
  36:back_propagation.c ****     }
 332              		.loc 1 36 13 is_stmt 1 view .LVU76
  36:back_propagation.c ****     }
 333              		.loc 1 36 33 is_stmt 0 view .LVU77
 334 0052 024B     		ldr	r3, .L29+4
 335 0054 0022     		movs	r2, #0
 336 0056 ECE7     		b	.L28
 337              	.L30:
 338              		.align	2
 339              	.L29:
 340 0058 0000F03F 		.word	1072693248
 341 005c 0000E03F 		.word	1071644672
 342              		.cfi_endproc
 343              	.LFE6:
 345              		.section	.text.d_softmax,"ax",%progbits
 346              		.align	1
 347              		.global	d_softmax
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	d_softmax:
 354              	.LFB11:
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359 0000 FFF7FEBF 		b	d_sigmoid
 360              		.cfi_endproc
 361              	.LFE11:
 363              		.section	.rodata.str1.1,"aMS",%progbits,1
 364              	.LC0:
 365 0000 43616C63 		.ascii	"Calculate local gradient: Invalid output activation"
 365      756C6174 
 365      65206C6F 
 365      63616C20 
 365      67726164 
 366 0033 2066756E 		.ascii	" function\000"
 366      6374696F 
 366      6E00
 367              		.global	__aeabi_dadd
 368              	.LC1:
 369 003d 496E7661 		.ascii	"Invalid hidden activation function\000"
 369      6C696420 
 369      68696464 
 369      656E2061 
 369      63746976 
 370              		.section	.text.calculate_local_gradient,"ax",%progbits
 371              		.align	1
 372              		.global	calculate_local_gradient
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu softvfp
 378              	calculate_local_gradient:
 379              	.LVL25:
 380              	.LFB8:
  39:back_propagation.c **** 
  40:back_propagation.c **** void d_softmax(int layer_size, double* layer_input, double* layer_output, double* layer_derivative)
  41:back_propagation.c ****     int i;
  42:back_propagation.c ****     for (i = 0; i < layer_size; i++)
  43:back_propagation.c ****         layer_derivative[i] = layer_output[i+1] * (1.0 - layer_output[i+1]);
  44:back_propagation.c **** }
  45:back_propagation.c **** 
  46:back_propagation.c **** void calculate_local_gradient(parameters* param, int layer_no, int n_layers, int* layer_sizes, doub
  47:back_propagation.c ****     double* expected_output, double** local_gradient) {
 381              		.loc 1 47 55 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 16, pretend = 0, frame = 32
 384              		@ frame_needed = 0, uses_anonymous_args = 0
  48:back_propagation.c ****     // Create memory for derivatives
  49:back_propagation.c ****     double** layer_derivatives = (double**)calloc(n_layers, sizeof(double*));
 385              		.loc 1 49 5 view .LVU79
  47:back_propagation.c ****     // Create memory for derivatives
 386              		.loc 1 47 55 is_stmt 0 view .LVU80
 387 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 388              	.LCFI4:
 389              		.cfi_def_cfa_offset 36
 390              		.cfi_offset 4, -36
 391              		.cfi_offset 5, -32
 392              		.cfi_offset 6, -28
 393              		.cfi_offset 7, -24
 394              		.cfi_offset 8, -20
 395              		.cfi_offset 9, -16
 396              		.cfi_offset 10, -12
 397              		.cfi_offset 11, -8
 398              		.cfi_offset 14, -4
 399 0004 89B0     		sub	sp, sp, #36
 400              	.LCFI5:
 401              		.cfi_def_cfa_offset 72
  47:back_propagation.c ****     // Create memory for derivatives
 402              		.loc 1 47 55 view .LVU81
 403 0006 0C46     		mov	r4, r1
 404 0008 0290     		str	r0, [sp, #8]
 405              		.loc 1 49 44 view .LVU82
 406 000a 0421     		movs	r1, #4
 407              	.LVL26:
 408              		.loc 1 49 44 view .LVU83
 409 000c 1046     		mov	r0, r2
 410              	.LVL27:
  47:back_propagation.c ****     // Create memory for derivatives
 411              		.loc 1 47 55 view .LVU84
 412 000e DDE91275 		ldrd	r7, r5, [sp, #72]
 413 0012 DDE9146B 		ldrd	r6, fp, [sp, #80]
 414 0016 0392     		str	r2, [sp, #12]
 415 0018 9846     		mov	r8, r3
 416              		.loc 1 49 44 view .LVU85
 417 001a FFF7FEFF 		bl	calloc
 418              	.LVL28:
  50:back_propagation.c **** 
  51:back_propagation.c ****     int i;
  52:back_propagation.c ****     for (i = 0; i < n_layers; i++)
 419              		.loc 1 52 12 view .LVU86
 420 001e 4FF00009 		mov	r9, #0
  49:back_propagation.c **** 
 421              		.loc 1 49 44 view .LVU87
 422 0022 0190     		str	r0, [sp, #4]
 423              	.LVL29:
  51:back_propagation.c ****     for (i = 0; i < n_layers; i++)
 424              		.loc 1 51 5 is_stmt 1 view .LVU88
 425              		.loc 1 52 5 view .LVU89
 426              	.L33:
 427              		.loc 1 52 17 discriminator 1 view .LVU90
 428              		.loc 1 52 5 is_stmt 0 discriminator 1 view .LVU91
 429 0024 039B     		ldr	r3, [sp, #12]
 430 0026 9945     		cmp	r9, r3
 431 0028 25DB     		blt	.L34
  53:back_propagation.c ****         layer_derivatives[i] = (double*)calloc(layer_sizes[i], sizeof(double));
  54:back_propagation.c **** 
  55:back_propagation.c ****     // If output layer
  56:back_propagation.c ****     if (layer_no == n_layers-1) {
 432              		.loc 1 56 5 is_stmt 1 view .LVU92
 433              		.loc 1 56 29 is_stmt 0 view .LVU93
 434 002a 013B     		subs	r3, r3, #1
 435              		.loc 1 56 8 view .LVU94
 436 002c A342     		cmp	r3, r4
 437 002e 40F0FC80 		bne	.L35
 438              	.LBB2:
  57:back_propagation.c ****         // Error produced at the output layer
  58:back_propagation.c ****         double* error_output = (double*)calloc(param->output_layer_size, sizeof(double));
 439              		.loc 1 58 9 is_stmt 1 view .LVU95
 440              		.loc 1 58 53 is_stmt 0 view .LVU96
 441 0032 029B     		ldr	r3, [sp, #8]
 442 0034 D3F82080 		ldr	r8, [r3, #32]
 443              	.LVL30:
 444              		.loc 1 58 41 view .LVU97
 445 0038 0821     		movs	r1, #8
 446 003a 4046     		mov	r0, r8
 447 003c FFF7FEFF 		bl	calloc
 448              	.LVL31:
  59:back_propagation.c **** 
  60:back_propagation.c ****         for (i = 0; i < param->output_layer_size; i++)
  61:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 449              		.loc 1 61 65 view .LVU98
 450 0040 05EB8403 		add	r3, r5, r4, lsl #2
 451 0044 0793     		str	r3, [sp, #28]
 452 0046 A6F10803 		sub	r3, r6, #8
 453 004a A0F10806 		sub	r6, r0, #8
  58:back_propagation.c **** 
 454              		.loc 1 58 41 view .LVU99
 455 004e 0490     		str	r0, [sp, #16]
 456              	.LVL32:
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 457              		.loc 1 60 9 is_stmt 1 view .LVU100
 458              		.loc 1 61 65 is_stmt 0 view .LVU101
 459 0050 4FEA840A 		lsl	r10, r4, #2
 460 0054 0593     		str	r3, [sp, #20]
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 461              		.loc 1 60 9 view .LVU102
 462 0056 0696     		str	r6, [sp, #24]
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 463              		.loc 1 60 16 view .LVU103
 464 0058 4FF00009 		mov	r9, #0
 465              	.LVL33:
 466              	.L36:
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 467              		.loc 1 60 21 is_stmt 1 discriminator 1 view .LVU104
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 468              		.loc 1 60 9 is_stmt 0 discriminator 1 view .LVU105
 469 005c C845     		cmp	r8, r9
 470 005e 15DC     		bgt	.L37
  62:back_propagation.c **** 
  63:back_propagation.c ****         // Calculate the layer derivatives
  64:back_propagation.c ****         // Calculate the local gradients
  65:back_propagation.c ****         switch(param->output_activation_function) {
 471              		.loc 1 65 9 is_stmt 1 view .LVU106
 472 0060 029B     		ldr	r3, [sp, #8]
 473 0062 5B6A     		ldr	r3, [r3, #36]
 474 0064 013B     		subs	r3, r3, #1
 475 0066 042B     		cmp	r3, #4
 476 0068 00F2D980 		bhi	.L38
 477 006c DFE803F0 		tbb	[pc, r3]
 478              	.L40:
 479 0070 23       		.byte	(.L44-.L40)/2
 480 0071 52       		.byte	(.L43-.L40)/2
 481 0072 73       		.byte	(.L42-.L40)/2
 482 0073 94       		.byte	(.L41-.L40)/2
 483 0074 B5       		.byte	(.L39-.L40)/2
 484              	.LVL34:
 485 0075 00       		.p2align 1
 486              	.L34:
 487              		.loc 1 65 9 is_stmt 0 view .LVU107
 488              	.LBE2:
  53:back_propagation.c **** 
 489              		.loc 1 53 9 is_stmt 1 discriminator 3 view .LVU108
  53:back_propagation.c **** 
 490              		.loc 1 53 41 is_stmt 0 discriminator 3 view .LVU109
 491 0076 58F82900 		ldr	r0, [r8, r9, lsl #2]
 492 007a 0821     		movs	r1, #8
 493 007c FFF7FEFF 		bl	calloc
 494              	.LVL35:
  53:back_propagation.c **** 
 495              		.loc 1 53 30 discriminator 3 view .LVU110
 496 0080 019B     		ldr	r3, [sp, #4]
 497 0082 43F82900 		str	r0, [r3, r9, lsl #2]
  52:back_propagation.c ****         layer_derivatives[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 498              		.loc 1 52 31 is_stmt 1 discriminator 3 view .LVU111
  52:back_propagation.c ****         layer_derivatives[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 499              		.loc 1 52 32 is_stmt 0 discriminator 3 view .LVU112
 500 0086 09F10109 		add	r9, r9, #1
 501              	.LVL36:
  52:back_propagation.c ****         layer_derivatives[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 502              		.loc 1 52 32 discriminator 3 view .LVU113
 503 008a CBE7     		b	.L33
 504              	.LVL37:
 505              	.L37:
 506              	.LBB3:
  61:back_propagation.c **** 
 507              		.loc 1 61 13 is_stmt 1 discriminator 3 view .LVU114
  61:back_propagation.c **** 
 508              		.loc 1 61 75 is_stmt 0 discriminator 3 view .LVU115
 509 008c 079B     		ldr	r3, [sp, #28]
  61:back_propagation.c **** 
 510              		.loc 1 61 50 discriminator 3 view .LVU116
 511 008e DDF814C0 		ldr	ip, [sp, #20]
  61:back_propagation.c **** 
 512              		.loc 1 61 75 discriminator 3 view .LVU117
 513 0092 1B68     		ldr	r3, [r3]
  61:back_propagation.c **** 
 514              		.loc 1 61 50 discriminator 3 view .LVU118
 515 0094 FCE90201 		ldrd	r0, [ip, #8]!
  61:back_propagation.c **** 
 516              		.loc 1 61 75 discriminator 3 view .LVU119
 517 0098 09F10109 		add	r9, r9, #1
 518              	.LVL38:
  61:back_propagation.c **** 
 519              		.loc 1 61 75 discriminator 3 view .LVU120
 520 009c 03EBC903 		add	r3, r3, r9, lsl #3
  61:back_propagation.c **** 
 521              		.loc 1 61 50 discriminator 3 view .LVU121
 522 00a0 D3E90023 		ldrd	r2, [r3]
 523 00a4 CDF814C0 		str	ip, [sp, #20]
 524 00a8 FFF7FEFF 		bl	__aeabi_dsub
 525              	.LVL39:
  61:back_propagation.c **** 
 526              		.loc 1 61 29 discriminator 3 view .LVU122
 527 00ac 069B     		ldr	r3, [sp, #24]
 528 00ae E3E90201 		strd	r0, [r3, #8]!
 529 00b2 0693     		str	r3, [sp, #24]
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 530              		.loc 1 60 51 is_stmt 1 discriminator 3 view .LVU123
 531              	.LVL40:
  60:back_propagation.c ****             error_output[i] = expected_output[i] - layer_outputs[layer_no][i+1];
 532              		.loc 1 60 51 is_stmt 0 discriminator 3 view .LVU124
 533 00b4 D2E7     		b	.L36
 534              	.L44:
  66:back_propagation.c ****             case 1: // identity
  67:back_propagation.c ****                 d_identity(param->output_layer_size, layer_inputs[layer_no], layer_outputs[layer_no
 535              		.loc 1 67 17 is_stmt 1 view .LVU125
 536 00b6 019B     		ldr	r3, [sp, #4]
 537 00b8 55F82420 		ldr	r2, [r5, r4, lsl #2]
 538 00bc 53F82490 		ldr	r9, [r3, r4, lsl #2]
 539              	.LVL41:
 540              		.loc 1 67 17 is_stmt 0 view .LVU126
 541 00c0 57F82410 		ldr	r1, [r7, r4, lsl #2]
 542 00c4 4B46     		mov	r3, r9
 543 00c6 4046     		mov	r0, r8
 544 00c8 FFF7FEFF 		bl	d_identity
 545              	.LVL42:
  68:back_propagation.c **** 
  69:back_propagation.c ****                 for (i = 0; i < param->output_layer_size; i++)
 546              		.loc 1 69 17 is_stmt 1 view .LVU127
 547              		.loc 1 69 38 is_stmt 0 view .LVU128
 548 00cc 029B     		ldr	r3, [sp, #8]
 549 00ce D3F82080 		ldr	r8, [r3, #32]
 550 00d2 A9F10809 		sub	r9, r9, #8
 551              		.loc 1 69 24 view .LVU129
 552 00d6 0025     		movs	r5, #0
 553              	.LVL43:
 554              	.L45:
 555              		.loc 1 69 29 is_stmt 1 discriminator 1 view .LVU130
 556              		.loc 1 69 17 is_stmt 0 discriminator 1 view .LVU131
 557 00d8 A845     		cmp	r8, r5
 558 00da 0DDC     		bgt	.L46
 559              	.L47:
  70:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
  71:back_propagation.c **** 
  72:back_propagation.c ****                 break;
  73:back_propagation.c ****             case 2: // sigmoid
  74:back_propagation.c ****                 d_sigmoid(param->output_layer_size, layer_inputs[layer_no], layer_outputs[layer_no]
  75:back_propagation.c **** 
  76:back_propagation.c ****                 for (i = 0; i < param->output_layer_size; i++)
  77:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
  78:back_propagation.c **** 
  79:back_propagation.c ****                 break;
  80:back_propagation.c ****             case 3: // tanh
  81:back_propagation.c ****                 d_tanh(param->output_layer_size, layer_inputs[layer_no], layer_outputs[layer_no], l
  82:back_propagation.c **** 
  83:back_propagation.c ****                 for (i = 0; i < param->output_layer_size; i++)
  84:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
  85:back_propagation.c **** 
  86:back_propagation.c ****                 break;
  87:back_propagation.c ****             case 4: // relu
  88:back_propagation.c ****                 d_relu(param->output_layer_size, layer_inputs[layer_no], layer_outputs[layer_no], l
  89:back_propagation.c **** 
  90:back_propagation.c ****                 for (i = 0; i < param->output_layer_size; i++)
  91:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
  92:back_propagation.c **** 
  93:back_propagation.c ****                 break;
  94:back_propagation.c ****             case 5: // softmax
  95:back_propagation.c ****                 d_softmax(param->output_layer_size, layer_inputs[layer_no], layer_outputs[layer_no]
  96:back_propagation.c **** 
  97:back_propagation.c ****                 for (i = 0; i < param->output_layer_size; i++)
  98:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
  99:back_propagation.c **** 
 100:back_propagation.c ****                 break;
 101:back_propagation.c ****             default:
 102:back_propagation.c ****                 printf("Calculate local gradient: Invalid output activation function\n");
 103:back_propagation.c ****                 exit(0);
 104:back_propagation.c ****                 break;
 560              		.loc 1 104 17 is_stmt 1 view .LVU132
 105:back_propagation.c ****         }
 106:back_propagation.c **** 
 107:back_propagation.c ****         // Free the memory allocated in Heap
 108:back_propagation.c ****         free(error_output);
 561              		.loc 1 108 9 view .LVU133
 562 00dc 0498     		ldr	r0, [sp, #16]
 563 00de FFF7FEFF 		bl	free
 564              	.LVL44:
 565              	.L67:
 566              		.loc 1 108 9 is_stmt 0 view .LVU134
 567              	.LBE3:
 568              	.LBB4:
 109:back_propagation.c ****     }
 110:back_propagation.c ****     else { // If hidden layer
 111:back_propagation.c ****         // Calculate the layer derivative for all units in the layer
 112:back_propagation.c ****         // Calculate local gradient
 113:back_propagation.c ****         int j;
 114:back_propagation.c ****         switch (param->hidden_activation_functions[layer_no-1]) {
 115:back_propagation.c ****             case 1: // identity
 116:back_propagation.c ****                 d_identity(layer_sizes[layer_no], layer_inputs[layer_no], layer_outputs[layer_no], 
 117:back_propagation.c **** 
 118:back_propagation.c ****                 for (i = 0; i < layer_sizes[layer_no]; i++) {
 119:back_propagation.c ****                     double error = 0.0;
 120:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 121:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 122:back_propagation.c **** 
 123:back_propagation.c ****                     local_gradient[layer_no][i] = error * layer_derivatives[layer_no][i];
 124:back_propagation.c ****                 }
 125:back_propagation.c **** 
 126:back_propagation.c ****                 break;
 127:back_propagation.c ****             case 2: // sigmoid
 128:back_propagation.c ****                 d_sigmoid(layer_sizes[layer_no], layer_inputs[layer_no], layer_outputs[layer_no], l
 129:back_propagation.c **** 
 130:back_propagation.c ****                 for (i = 0; i < layer_sizes[layer_no]; i++) {
 131:back_propagation.c ****                     double error = 0.0;
 132:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 133:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 134:back_propagation.c **** 
 135:back_propagation.c ****                     local_gradient[layer_no][i] = error * layer_derivatives[layer_no][i];
 136:back_propagation.c ****                 }
 137:back_propagation.c **** 
 138:back_propagation.c ****                 break;
 139:back_propagation.c ****             case 3: // tanh
 140:back_propagation.c ****                 d_tanh(layer_sizes[layer_no], layer_inputs[layer_no], layer_outputs[layer_no], laye
 141:back_propagation.c **** 
 142:back_propagation.c ****                 for (i = 0; i < layer_sizes[layer_no]; i++) {
 143:back_propagation.c ****                     double error = 0.0;
 144:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 145:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 146:back_propagation.c **** 
 147:back_propagation.c ****                     local_gradient[layer_no][i] = error * layer_derivatives[layer_no][i];
 148:back_propagation.c ****                 }
 149:back_propagation.c **** 
 150:back_propagation.c ****                 break;
 151:back_propagation.c ****             case 4: // relu
 152:back_propagation.c ****                 d_relu(layer_sizes[layer_no], layer_inputs[layer_no], layer_outputs[layer_no], laye
 153:back_propagation.c **** 
 154:back_propagation.c ****                 for (i = 0; i < layer_sizes[layer_no]; i++) {
 155:back_propagation.c ****                     double error = 0.0;
 156:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 157:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 158:back_propagation.c **** 
 159:back_propagation.c ****                     local_gradient[layer_no][i] = error * layer_derivatives[layer_no][i];
 160:back_propagation.c ****                 }
 161:back_propagation.c **** 
 162:back_propagation.c ****                 break;
 163:back_propagation.c ****             case 5: // softmax
 164:back_propagation.c ****                 d_softmax(layer_sizes[layer_no], layer_inputs[layer_no], layer_outputs[layer_no], l
 165:back_propagation.c **** 
 166:back_propagation.c ****                 for (i = 0; i < layer_sizes[layer_no]; i++) {
 569              		.loc 1 166 24 discriminator 1 view .LVU135
 570 00e2 0024     		movs	r4, #0
 571              	.L56:
 572              	.LVL45:
 573              		.loc 1 166 24 discriminator 1 view .LVU136
 574              	.LBE4:
 167:back_propagation.c ****                     double error = 0.0;
 168:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 169:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 170:back_propagation.c **** 
 171:back_propagation.c ****                     local_gradient[layer_no][i] = error * layer_derivatives[layer_no][i];
 172:back_propagation.c ****                 }
 173:back_propagation.c **** 
 174:back_propagation.c ****                 break;
 175:back_propagation.c ****             default:
 176:back_propagation.c ****                 printf("Invalid hidden activation function\n");
 177:back_propagation.c ****                 exit(0);
 178:back_propagation.c ****                 break;
 179:back_propagation.c ****         }
 180:back_propagation.c ****     }
 181:back_propagation.c **** 
 182:back_propagation.c ****     // Free the memory allocated in Heap
 183:back_propagation.c ****     for (i = 0; i < n_layers; i++)
 575              		.loc 1 183 17 is_stmt 1 discriminator 1 view .LVU137
 576              		.loc 1 183 5 is_stmt 0 discriminator 1 view .LVU138
 577 00e4 039B     		ldr	r3, [sp, #12]
 578 00e6 9C42     		cmp	r4, r3
 579 00e8 C0F23E82 		blt	.L82
 184:back_propagation.c ****         free(layer_derivatives[i]);
 185:back_propagation.c **** 
 186:back_propagation.c ****     free(layer_derivatives);
 580              		.loc 1 186 5 is_stmt 1 view .LVU139
 581 00ec 0198     		ldr	r0, [sp, #4]
 187:back_propagation.c **** 
 188:back_propagation.c **** }
 582              		.loc 1 188 1 is_stmt 0 view .LVU140
 583 00ee 09B0     		add	sp, sp, #36
 584              	.LCFI6:
 585              		.cfi_remember_state
 586              		.cfi_def_cfa_offset 36
 587              		@ sp needed
 588 00f0 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 589              	.LCFI7:
 590              		.cfi_restore 14
 591              		.cfi_restore 11
 592              		.cfi_restore 10
 593              		.cfi_restore 9
 594              		.cfi_restore 8
 595              		.cfi_restore 7
 596              		.cfi_restore 6
 597              		.cfi_restore 5
 598              		.cfi_restore 4
 599              		.cfi_def_cfa_offset 0
 600              	.LVL46:
 186:back_propagation.c **** 
 601              		.loc 1 186 5 view .LVU141
 602 00f4 FFF7FEBF 		b	free
 603              	.LVL47:
 604              	.L46:
 605              	.LCFI8:
 606              		.cfi_restore_state
 607              	.LBB15:
  70:back_propagation.c **** 
 608              		.loc 1 70 21 is_stmt 1 discriminator 3 view .LVU142
  70:back_propagation.c **** 
 609              		.loc 1 70 67 is_stmt 0 discriminator 3 view .LVU143
 610 00f8 F9E90223 		ldrd	r2, [r9, #8]!
 611 00fc F6E90201 		ldrd	r0, [r6, #8]!
  70:back_propagation.c **** 
 612              		.loc 1 70 49 discriminator 3 view .LVU144
 613 0100 5BF80A70 		ldr	r7, [fp, r10]
  70:back_propagation.c **** 
 614              		.loc 1 70 67 discriminator 3 view .LVU145
 615 0104 FFF7FEFF 		bl	__aeabi_dmul
 616              	.LVL48:
  70:back_propagation.c **** 
 617              		.loc 1 70 49 discriminator 3 view .LVU146
 618 0108 07EBC507 		add	r7, r7, r5, lsl #3
 619 010c C7E90001 		strd	r0, [r7]
  69:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 620              		.loc 1 69 59 is_stmt 1 discriminator 3 view .LVU147
  69:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 621              		.loc 1 69 60 is_stmt 0 discriminator 3 view .LVU148
 622 0110 0135     		adds	r5, r5, #1
 623              	.LVL49:
  69:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 624              		.loc 1 69 60 discriminator 3 view .LVU149
 625 0112 E1E7     		b	.L45
 626              	.LVL50:
 627              	.L43:
  74:back_propagation.c **** 
 628              		.loc 1 74 17 is_stmt 1 view .LVU150
 629 0114 019B     		ldr	r3, [sp, #4]
 630 0116 55F82420 		ldr	r2, [r5, r4, lsl #2]
 631 011a 53F82490 		ldr	r9, [r3, r4, lsl #2]
 632              	.LVL51:
  74:back_propagation.c **** 
 633              		.loc 1 74 17 is_stmt 0 view .LVU151
 634 011e 57F82410 		ldr	r1, [r7, r4, lsl #2]
 635 0122 4B46     		mov	r3, r9
 636 0124 4046     		mov	r0, r8
 637 0126 FFF7FEFF 		bl	d_sigmoid
 638              	.LVL52:
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 639              		.loc 1 76 17 is_stmt 1 view .LVU152
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 640              		.loc 1 76 38 is_stmt 0 view .LVU153
 641 012a 029B     		ldr	r3, [sp, #8]
 642 012c D3F82080 		ldr	r8, [r3, #32]
 643 0130 A9F10809 		sub	r9, r9, #8
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 644              		.loc 1 76 24 view .LVU154
 645 0134 0025     		movs	r5, #0
 646              	.LVL53:
 647              	.L48:
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 648              		.loc 1 76 29 is_stmt 1 discriminator 1 view .LVU155
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 649              		.loc 1 76 17 is_stmt 0 discriminator 1 view .LVU156
 650 0136 A845     		cmp	r8, r5
 651 0138 D0DD     		ble	.L47
  77:back_propagation.c **** 
 652              		.loc 1 77 21 is_stmt 1 discriminator 3 view .LVU157
  77:back_propagation.c **** 
 653              		.loc 1 77 67 is_stmt 0 discriminator 3 view .LVU158
 654 013a F9E90223 		ldrd	r2, [r9, #8]!
 655 013e F6E90201 		ldrd	r0, [r6, #8]!
  77:back_propagation.c **** 
 656              		.loc 1 77 49 discriminator 3 view .LVU159
 657 0142 5BF80A70 		ldr	r7, [fp, r10]
  77:back_propagation.c **** 
 658              		.loc 1 77 67 discriminator 3 view .LVU160
 659 0146 FFF7FEFF 		bl	__aeabi_dmul
 660              	.LVL54:
  77:back_propagation.c **** 
 661              		.loc 1 77 49 discriminator 3 view .LVU161
 662 014a 07EBC507 		add	r7, r7, r5, lsl #3
 663 014e C7E90001 		strd	r0, [r7]
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 664              		.loc 1 76 59 is_stmt 1 discriminator 3 view .LVU162
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 665              		.loc 1 76 60 is_stmt 0 discriminator 3 view .LVU163
 666 0152 0135     		adds	r5, r5, #1
 667              	.LVL55:
  76:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 668              		.loc 1 76 60 discriminator 3 view .LVU164
 669 0154 EFE7     		b	.L48
 670              	.LVL56:
 671              	.L42:
  81:back_propagation.c **** 
 672              		.loc 1 81 17 is_stmt 1 view .LVU165
 673 0156 019B     		ldr	r3, [sp, #4]
 674 0158 55F82420 		ldr	r2, [r5, r4, lsl #2]
 675 015c 53F82490 		ldr	r9, [r3, r4, lsl #2]
 676              	.LVL57:
  81:back_propagation.c **** 
 677              		.loc 1 81 17 is_stmt 0 view .LVU166
 678 0160 57F82410 		ldr	r1, [r7, r4, lsl #2]
 679 0164 4B46     		mov	r3, r9
 680 0166 4046     		mov	r0, r8
 681 0168 FFF7FEFF 		bl	d_tanh
 682              	.LVL58:
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 683              		.loc 1 83 17 is_stmt 1 view .LVU167
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 684              		.loc 1 83 38 is_stmt 0 view .LVU168
 685 016c 029B     		ldr	r3, [sp, #8]
 686 016e D3F82080 		ldr	r8, [r3, #32]
 687 0172 A9F10809 		sub	r9, r9, #8
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 688              		.loc 1 83 24 view .LVU169
 689 0176 0025     		movs	r5, #0
 690              	.LVL59:
 691              	.L50:
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 692              		.loc 1 83 29 is_stmt 1 discriminator 1 view .LVU170
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 693              		.loc 1 83 17 is_stmt 0 discriminator 1 view .LVU171
 694 0178 A845     		cmp	r8, r5
 695 017a AFDD     		ble	.L47
  84:back_propagation.c **** 
 696              		.loc 1 84 21 is_stmt 1 discriminator 3 view .LVU172
  84:back_propagation.c **** 
 697              		.loc 1 84 67 is_stmt 0 discriminator 3 view .LVU173
 698 017c F9E90223 		ldrd	r2, [r9, #8]!
 699 0180 F6E90201 		ldrd	r0, [r6, #8]!
  84:back_propagation.c **** 
 700              		.loc 1 84 49 discriminator 3 view .LVU174
 701 0184 5BF80A70 		ldr	r7, [fp, r10]
  84:back_propagation.c **** 
 702              		.loc 1 84 67 discriminator 3 view .LVU175
 703 0188 FFF7FEFF 		bl	__aeabi_dmul
 704              	.LVL60:
  84:back_propagation.c **** 
 705              		.loc 1 84 49 discriminator 3 view .LVU176
 706 018c 07EBC507 		add	r7, r7, r5, lsl #3
 707 0190 C7E90001 		strd	r0, [r7]
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 708              		.loc 1 83 59 is_stmt 1 discriminator 3 view .LVU177
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 709              		.loc 1 83 60 is_stmt 0 discriminator 3 view .LVU178
 710 0194 0135     		adds	r5, r5, #1
 711              	.LVL61:
  83:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 712              		.loc 1 83 60 discriminator 3 view .LVU179
 713 0196 EFE7     		b	.L50
 714              	.LVL62:
 715              	.L41:
  88:back_propagation.c **** 
 716              		.loc 1 88 17 is_stmt 1 view .LVU180
 717 0198 019B     		ldr	r3, [sp, #4]
 718 019a 55F82420 		ldr	r2, [r5, r4, lsl #2]
 719 019e 53F82490 		ldr	r9, [r3, r4, lsl #2]
 720              	.LVL63:
  88:back_propagation.c **** 
 721              		.loc 1 88 17 is_stmt 0 view .LVU181
 722 01a2 57F82410 		ldr	r1, [r7, r4, lsl #2]
 723 01a6 4B46     		mov	r3, r9
 724 01a8 4046     		mov	r0, r8
 725 01aa FFF7FEFF 		bl	d_relu
 726              	.LVL64:
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 727              		.loc 1 90 17 is_stmt 1 view .LVU182
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 728              		.loc 1 90 38 is_stmt 0 view .LVU183
 729 01ae 029B     		ldr	r3, [sp, #8]
 730 01b0 D3F82080 		ldr	r8, [r3, #32]
 731 01b4 A9F10809 		sub	r9, r9, #8
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 732              		.loc 1 90 24 view .LVU184
 733 01b8 0025     		movs	r5, #0
 734              	.LVL65:
 735              	.L52:
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 736              		.loc 1 90 29 is_stmt 1 discriminator 1 view .LVU185
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 737              		.loc 1 90 17 is_stmt 0 discriminator 1 view .LVU186
 738 01ba A845     		cmp	r8, r5
 739 01bc 8EDD     		ble	.L47
  91:back_propagation.c **** 
 740              		.loc 1 91 21 is_stmt 1 discriminator 3 view .LVU187
  91:back_propagation.c **** 
 741              		.loc 1 91 67 is_stmt 0 discriminator 3 view .LVU188
 742 01be F9E90223 		ldrd	r2, [r9, #8]!
 743 01c2 F6E90201 		ldrd	r0, [r6, #8]!
  91:back_propagation.c **** 
 744              		.loc 1 91 49 discriminator 3 view .LVU189
 745 01c6 5BF80A70 		ldr	r7, [fp, r10]
  91:back_propagation.c **** 
 746              		.loc 1 91 67 discriminator 3 view .LVU190
 747 01ca FFF7FEFF 		bl	__aeabi_dmul
 748              	.LVL66:
  91:back_propagation.c **** 
 749              		.loc 1 91 49 discriminator 3 view .LVU191
 750 01ce 07EBC507 		add	r7, r7, r5, lsl #3
 751 01d2 C7E90001 		strd	r0, [r7]
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 752              		.loc 1 90 59 is_stmt 1 discriminator 3 view .LVU192
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 753              		.loc 1 90 60 is_stmt 0 discriminator 3 view .LVU193
 754 01d6 0135     		adds	r5, r5, #1
 755              	.LVL67:
  90:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 756              		.loc 1 90 60 discriminator 3 view .LVU194
 757 01d8 EFE7     		b	.L52
 758              	.LVL68:
 759              	.L39:
  95:back_propagation.c **** 
 760              		.loc 1 95 17 is_stmt 1 view .LVU195
 761 01da 019B     		ldr	r3, [sp, #4]
 762 01dc 55F82420 		ldr	r2, [r5, r4, lsl #2]
 763 01e0 53F82490 		ldr	r9, [r3, r4, lsl #2]
 764              	.LVL69:
  95:back_propagation.c **** 
 765              		.loc 1 95 17 is_stmt 0 view .LVU196
 766 01e4 57F82410 		ldr	r1, [r7, r4, lsl #2]
 767 01e8 4B46     		mov	r3, r9
 768 01ea 4046     		mov	r0, r8
 769 01ec FFF7FEFF 		bl	d_sigmoid
 770              	.LVL70:
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 771              		.loc 1 97 17 is_stmt 1 view .LVU197
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 772              		.loc 1 97 38 is_stmt 0 view .LVU198
 773 01f0 029B     		ldr	r3, [sp, #8]
 774 01f2 D3F82080 		ldr	r8, [r3, #32]
 775 01f6 A9F10809 		sub	r9, r9, #8
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 776              		.loc 1 97 24 view .LVU199
 777 01fa 0025     		movs	r5, #0
 778              	.LVL71:
 779              	.L54:
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 780              		.loc 1 97 29 is_stmt 1 discriminator 1 view .LVU200
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 781              		.loc 1 97 17 is_stmt 0 discriminator 1 view .LVU201
 782 01fc A845     		cmp	r8, r5
 783 01fe 7FF76DAF 		ble	.L47
  98:back_propagation.c **** 
 784              		.loc 1 98 21 is_stmt 1 discriminator 3 view .LVU202
  98:back_propagation.c **** 
 785              		.loc 1 98 67 is_stmt 0 discriminator 3 view .LVU203
 786 0202 F9E90223 		ldrd	r2, [r9, #8]!
 787 0206 F6E90201 		ldrd	r0, [r6, #8]!
  98:back_propagation.c **** 
 788              		.loc 1 98 49 discriminator 3 view .LVU204
 789 020a 5BF80A70 		ldr	r7, [fp, r10]
  98:back_propagation.c **** 
 790              		.loc 1 98 67 discriminator 3 view .LVU205
 791 020e FFF7FEFF 		bl	__aeabi_dmul
 792              	.LVL72:
  98:back_propagation.c **** 
 793              		.loc 1 98 49 discriminator 3 view .LVU206
 794 0212 07EBC507 		add	r7, r7, r5, lsl #3
 795 0216 C7E90001 		strd	r0, [r7]
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 796              		.loc 1 97 59 is_stmt 1 discriminator 3 view .LVU207
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 797              		.loc 1 97 60 is_stmt 0 discriminator 3 view .LVU208
 798 021a 0135     		adds	r5, r5, #1
 799              	.LVL73:
  97:back_propagation.c ****                     local_gradient[layer_no][i] = error_output[i] * layer_derivatives[layer_no][i];
 800              		.loc 1 97 60 discriminator 3 view .LVU209
 801 021c EEE7     		b	.L54
 802              	.LVL74:
 803              	.L38:
 102:back_propagation.c ****                 exit(0);
 804              		.loc 1 102 17 is_stmt 1 view .LVU210
 805 021e A948     		ldr	r0, .L84
 806              	.LVL75:
 807              	.L83:
 102:back_propagation.c ****                 exit(0);
 808              		.loc 1 102 17 is_stmt 0 view .LVU211
 809              	.LBE15:
 810              	.LBB16:
 176:back_propagation.c ****                 exit(0);
 811              		.loc 1 176 17 view .LVU212
 812 0220 FFF7FEFF 		bl	puts
 813              	.LVL76:
 177:back_propagation.c ****                 break;
 814              		.loc 1 177 17 is_stmt 1 view .LVU213
 815 0224 0020     		movs	r0, #0
 816 0226 FFF7FEFF 		bl	exit
 817              	.LVL77:
 818              	.L35:
 113:back_propagation.c ****         switch (param->hidden_activation_functions[layer_no-1]) {
 819              		.loc 1 113 9 view .LVU214
 114:back_propagation.c ****             case 1: // identity
 820              		.loc 1 114 9 view .LVU215
 114:back_propagation.c ****             case 1: // identity
 821              		.loc 1 114 51 is_stmt 0 view .LVU216
 822 022a 029B     		ldr	r3, [sp, #8]
 823 022c 04F18044 		add	r4, r4, #1073741824
 824              	.LVL78:
 114:back_propagation.c ****             case 1: // identity
 825              		.loc 1 114 51 view .LVU217
 826 0230 013C     		subs	r4, r4, #1
 827              	.LVL79:
 114:back_propagation.c ****             case 1: // identity
 828              		.loc 1 114 51 view .LVU218
 829 0232 9B68     		ldr	r3, [r3, #8]
 830 0234 53F82430 		ldr	r3, [r3, r4, lsl #2]
 831 0238 A600     		lsls	r6, r4, #2
 832 023a 013B     		subs	r3, r3, #1
 833 023c 341D     		adds	r4, r6, #4
 834              	.LVL80:
 114:back_propagation.c ****             case 1: // identity
 835              		.loc 1 114 51 view .LVU219
 836 023e 0836     		adds	r6, r6, #8
 837 0240 042B     		cmp	r3, #4
 838 0242 00F28F81 		bhi	.L57
 839 0246 DFE813F0 		tbh	[pc, r3, lsl #1]
 840              	.L59:
 841 024a 0500     		.2byte	(.L63-.L59)/2
 842 024c 5300     		.2byte	(.L62-.L59)/2
 843 024e A100     		.2byte	(.L61-.L59)/2
 844 0250 EF00     		.2byte	(.L60-.L59)/2
 845 0252 3F01     		.2byte	(.L58-.L59)/2
 846              		.p2align 1
 847              	.L63:
 116:back_propagation.c **** 
 848              		.loc 1 116 17 is_stmt 1 view .LVU220
 849 0254 019B     		ldr	r3, [sp, #4]
 850 0256 2A59     		ldr	r2, [r5, r4]
 851 0258 53F80490 		ldr	r9, [r3, r4]
 852              	.LVL81:
 116:back_propagation.c **** 
 853              		.loc 1 116 17 is_stmt 0 view .LVU221
 854 025c 3959     		ldr	r1, [r7, r4]
 855 025e 58F80400 		ldr	r0, [r8, r4]
 856 0262 4B46     		mov	r3, r9
 857 0264 FFF7FEFF 		bl	d_identity
 858              	.LVL82:
 118:back_propagation.c ****                     double error = 0.0;
 859              		.loc 1 118 17 is_stmt 1 view .LVU222
 118:back_propagation.c ****                     double error = 0.0;
 860              		.loc 1 118 44 is_stmt 0 view .LVU223
 861 0268 58F80430 		ldr	r3, [r8, r4]
 862 026c 0693     		str	r3, [sp, #24]
 863              	.LBB5:
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 864              		.loc 1 120 48 view .LVU224
 865 026e 08EB0603 		add	r3, r8, r6
 866 0272 0493     		str	r3, [sp, #16]
 121:back_propagation.c **** 
 867              		.loc 1 121 48 view .LVU225
 868 0274 0BEB0605 		add	r5, fp, r6
 869 0278 A9F10808 		sub	r8, r9, #8
 870              	.LVL83:
 121:back_propagation.c **** 
 871              		.loc 1 121 48 view .LVU226
 872              	.LBE5:
 118:back_propagation.c ****                     double error = 0.0;
 873              		.loc 1 118 24 view .LVU227
 874 027c 0027     		movs	r7, #0
 875              	.LVL84:
 876              	.L64:
 118:back_propagation.c ****                     double error = 0.0;
 877              		.loc 1 118 29 is_stmt 1 discriminator 1 view .LVU228
 118:back_propagation.c ****                     double error = 0.0;
 878              		.loc 1 118 17 is_stmt 0 discriminator 1 view .LVU229
 879 027e 069B     		ldr	r3, [sp, #24]
 880 0280 BB42     		cmp	r3, r7
 881 0282 7FF72EAF 		ble	.L67
 882              	.LBB6:
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 883              		.loc 1 120 48 view .LVU230
 884 0286 049B     		ldr	r3, [sp, #16]
 885 0288 1B68     		ldr	r3, [r3]
 886 028a 0593     		str	r3, [sp, #20]
 887 028c BB00     		lsls	r3, r7, #2
 888 028e 0793     		str	r3, [sp, #28]
 119:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 889              		.loc 1 119 28 view .LVU231
 890 0290 4FF00009 		mov	r9, #0
 891 0294 4FF0000A 		mov	r10, #0
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 892              		.loc 1 120 28 view .LVU232
 893 0298 0026     		movs	r6, #0
 894 029a 18E0     		b	.L68
 895              	.LVL85:
 896              	.L65:
 121:back_propagation.c **** 
 897              		.loc 1 121 25 is_stmt 1 discriminator 3 view .LVU233
 121:back_propagation.c **** 
 898              		.loc 1 121 79 is_stmt 0 discriminator 3 view .LVU234
 899 029c 029B     		ldr	r3, [sp, #8]
 121:back_propagation.c **** 
 900              		.loc 1 121 92 discriminator 3 view .LVU235
 901 029e 079A     		ldr	r2, [sp, #28]
 121:back_propagation.c **** 
 902              		.loc 1 121 79 discriminator 3 view .LVU236
 903 02a0 DB6B     		ldr	r3, [r3, #60]
 121:back_propagation.c **** 
 904              		.loc 1 121 89 discriminator 3 view .LVU237
 905 02a2 1B59     		ldr	r3, [r3, r4]
 121:back_propagation.c **** 
 906              		.loc 1 121 92 discriminator 3 view .LVU238
 907 02a4 9958     		ldr	r1, [r3, r2]
 121:back_propagation.c **** 
 908              		.loc 1 121 60 discriminator 3 view .LVU239
 909 02a6 2B68     		ldr	r3, [r5]
 121:back_propagation.c **** 
 910              		.loc 1 121 92 discriminator 3 view .LVU240
 911 02a8 01EBC601 		add	r1, r1, r6, lsl #3
 121:back_propagation.c **** 
 912              		.loc 1 121 60 discriminator 3 view .LVU241
 913 02ac 03EBC603 		add	r3, r3, r6, lsl #3
 121:back_propagation.c **** 
 914              		.loc 1 121 64 discriminator 3 view .LVU242
 915 02b0 D3E90023 		ldrd	r2, [r3]
 916 02b4 D1E90001 		ldrd	r0, [r1]
 917 02b8 FFF7FEFF 		bl	__aeabi_dmul
 918              	.LVL86:
 919 02bc 0246     		mov	r2, r0
 920 02be 0B46     		mov	r3, r1
 121:back_propagation.c **** 
 921              		.loc 1 121 31 discriminator 3 view .LVU243
 922 02c0 4846     		mov	r0, r9
 923 02c2 5146     		mov	r1, r10
 924 02c4 FFF7FEFF 		bl	__aeabi_dadd
 925              	.LVL87:
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 926              		.loc 1 120 63 discriminator 3 view .LVU244
 927 02c8 0136     		adds	r6, r6, #1
 928              	.LVL88:
 121:back_propagation.c **** 
 929              		.loc 1 121 31 discriminator 3 view .LVU245
 930 02ca 8146     		mov	r9, r0
 931              	.LVL89:
 121:back_propagation.c **** 
 932              		.loc 1 121 31 discriminator 3 view .LVU246
 933 02cc 8A46     		mov	r10, r1
 934              	.LVL90:
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 935              		.loc 1 120 62 is_stmt 1 discriminator 3 view .LVU247
 936              	.L68:
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 937              		.loc 1 120 33 discriminator 1 view .LVU248
 120:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 938              		.loc 1 120 21 is_stmt 0 discriminator 1 view .LVU249
 939 02ce 059B     		ldr	r3, [sp, #20]
 940 02d0 B342     		cmp	r3, r6
 941 02d2 E3DC     		bgt	.L65
 123:back_propagation.c ****                 }
 942              		.loc 1 123 21 is_stmt 1 discriminator 2 view .LVU250
 123:back_propagation.c ****                 }
 943              		.loc 1 123 57 is_stmt 0 discriminator 2 view .LVU251
 944 02d4 F8E90201 		ldrd	r0, [r8, #8]!
 945 02d8 4A46     		mov	r2, r9
 946 02da 5346     		mov	r3, r10
 123:back_propagation.c ****                 }
 947              		.loc 1 123 49 discriminator 2 view .LVU252
 948 02dc 5BF80460 		ldr	r6, [fp, r4]
 949              	.LVL91:
 123:back_propagation.c ****                 }
 950              		.loc 1 123 57 discriminator 2 view .LVU253
 951 02e0 FFF7FEFF 		bl	__aeabi_dmul
 952              	.LVL92:
 123:back_propagation.c ****                 }
 953              		.loc 1 123 49 discriminator 2 view .LVU254
 954 02e4 06EBC706 		add	r6, r6, r7, lsl #3
 955 02e8 C6E90001 		strd	r0, [r6]
 956              	.LBE6:
 118:back_propagation.c ****                     double error = 0.0;
 957              		.loc 1 118 56 is_stmt 1 discriminator 2 view .LVU255
 118:back_propagation.c ****                     double error = 0.0;
 958              		.loc 1 118 57 is_stmt 0 discriminator 2 view .LVU256
 959 02ec 0137     		adds	r7, r7, #1
 960              	.LVL93:
 118:back_propagation.c ****                     double error = 0.0;
 961              		.loc 1 118 57 discriminator 2 view .LVU257
 962 02ee C6E7     		b	.L64
 963              	.LVL94:
 964              	.L62:
 128:back_propagation.c **** 
 965              		.loc 1 128 17 is_stmt 1 view .LVU258
 966 02f0 019B     		ldr	r3, [sp, #4]
 967 02f2 2A59     		ldr	r2, [r5, r4]
 968 02f4 53F80490 		ldr	r9, [r3, r4]
 969              	.LVL95:
 128:back_propagation.c **** 
 970              		.loc 1 128 17 is_stmt 0 view .LVU259
 971 02f8 3959     		ldr	r1, [r7, r4]
 972 02fa 58F80400 		ldr	r0, [r8, r4]
 973 02fe 4B46     		mov	r3, r9
 974 0300 FFF7FEFF 		bl	d_sigmoid
 975              	.LVL96:
 130:back_propagation.c ****                     double error = 0.0;
 976              		.loc 1 130 17 is_stmt 1 view .LVU260
 130:back_propagation.c ****                     double error = 0.0;
 977              		.loc 1 130 44 is_stmt 0 view .LVU261
 978 0304 58F80430 		ldr	r3, [r8, r4]
 979 0308 0693     		str	r3, [sp, #24]
 980              	.LBB7:
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 981              		.loc 1 132 48 view .LVU262
 982 030a 08EB0603 		add	r3, r8, r6
 983 030e 0493     		str	r3, [sp, #16]
 133:back_propagation.c **** 
 984              		.loc 1 133 48 view .LVU263
 985 0310 0BEB0605 		add	r5, fp, r6
 986 0314 A9F10808 		sub	r8, r9, #8
 987              	.LVL97:
 133:back_propagation.c **** 
 988              		.loc 1 133 48 view .LVU264
 989              	.LBE7:
 130:back_propagation.c ****                     double error = 0.0;
 990              		.loc 1 130 24 view .LVU265
 991 0318 0027     		movs	r7, #0
 992              	.LVL98:
 993              	.L69:
 130:back_propagation.c ****                     double error = 0.0;
 994              		.loc 1 130 29 is_stmt 1 discriminator 1 view .LVU266
 130:back_propagation.c ****                     double error = 0.0;
 995              		.loc 1 130 17 is_stmt 0 discriminator 1 view .LVU267
 996 031a 069B     		ldr	r3, [sp, #24]
 997 031c BB42     		cmp	r3, r7
 998 031e 7FF7E0AE 		ble	.L67
 999              	.LBB8:
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1000              		.loc 1 132 48 view .LVU268
 1001 0322 049B     		ldr	r3, [sp, #16]
 1002 0324 1B68     		ldr	r3, [r3]
 1003 0326 0593     		str	r3, [sp, #20]
 1004 0328 BB00     		lsls	r3, r7, #2
 1005 032a 0793     		str	r3, [sp, #28]
 131:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 1006              		.loc 1 131 28 view .LVU269
 1007 032c 4FF00009 		mov	r9, #0
 1008 0330 4FF0000A 		mov	r10, #0
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1009              		.loc 1 132 28 view .LVU270
 1010 0334 0026     		movs	r6, #0
 1011 0336 18E0     		b	.L72
 1012              	.LVL99:
 1013              	.L70:
 133:back_propagation.c **** 
 1014              		.loc 1 133 25 is_stmt 1 discriminator 3 view .LVU271
 133:back_propagation.c **** 
 1015              		.loc 1 133 79 is_stmt 0 discriminator 3 view .LVU272
 1016 0338 029B     		ldr	r3, [sp, #8]
 133:back_propagation.c **** 
 1017              		.loc 1 133 92 discriminator 3 view .LVU273
 1018 033a 079A     		ldr	r2, [sp, #28]
 133:back_propagation.c **** 
 1019              		.loc 1 133 79 discriminator 3 view .LVU274
 1020 033c DB6B     		ldr	r3, [r3, #60]
 133:back_propagation.c **** 
 1021              		.loc 1 133 89 discriminator 3 view .LVU275
 1022 033e 1B59     		ldr	r3, [r3, r4]
 133:back_propagation.c **** 
 1023              		.loc 1 133 92 discriminator 3 view .LVU276
 1024 0340 9958     		ldr	r1, [r3, r2]
 133:back_propagation.c **** 
 1025              		.loc 1 133 60 discriminator 3 view .LVU277
 1026 0342 2B68     		ldr	r3, [r5]
 133:back_propagation.c **** 
 1027              		.loc 1 133 92 discriminator 3 view .LVU278
 1028 0344 01EBC601 		add	r1, r1, r6, lsl #3
 133:back_propagation.c **** 
 1029              		.loc 1 133 60 discriminator 3 view .LVU279
 1030 0348 03EBC603 		add	r3, r3, r6, lsl #3
 133:back_propagation.c **** 
 1031              		.loc 1 133 64 discriminator 3 view .LVU280
 1032 034c D3E90023 		ldrd	r2, [r3]
 1033 0350 D1E90001 		ldrd	r0, [r1]
 1034 0354 FFF7FEFF 		bl	__aeabi_dmul
 1035              	.LVL100:
 1036 0358 0246     		mov	r2, r0
 1037 035a 0B46     		mov	r3, r1
 133:back_propagation.c **** 
 1038              		.loc 1 133 31 discriminator 3 view .LVU281
 1039 035c 4846     		mov	r0, r9
 1040 035e 5146     		mov	r1, r10
 1041 0360 FFF7FEFF 		bl	__aeabi_dadd
 1042              	.LVL101:
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1043              		.loc 1 132 63 discriminator 3 view .LVU282
 1044 0364 0136     		adds	r6, r6, #1
 1045              	.LVL102:
 133:back_propagation.c **** 
 1046              		.loc 1 133 31 discriminator 3 view .LVU283
 1047 0366 8146     		mov	r9, r0
 1048              	.LVL103:
 133:back_propagation.c **** 
 1049              		.loc 1 133 31 discriminator 3 view .LVU284
 1050 0368 8A46     		mov	r10, r1
 1051              	.LVL104:
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1052              		.loc 1 132 62 is_stmt 1 discriminator 3 view .LVU285
 1053              	.L72:
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1054              		.loc 1 132 33 discriminator 1 view .LVU286
 132:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1055              		.loc 1 132 21 is_stmt 0 discriminator 1 view .LVU287
 1056 036a 059B     		ldr	r3, [sp, #20]
 1057 036c B342     		cmp	r3, r6
 1058 036e E3DC     		bgt	.L70
 135:back_propagation.c ****                 }
 1059              		.loc 1 135 21 is_stmt 1 discriminator 2 view .LVU288
 135:back_propagation.c ****                 }
 1060              		.loc 1 135 57 is_stmt 0 discriminator 2 view .LVU289
 1061 0370 F8E90201 		ldrd	r0, [r8, #8]!
 1062 0374 4A46     		mov	r2, r9
 1063 0376 5346     		mov	r3, r10
 135:back_propagation.c ****                 }
 1064              		.loc 1 135 49 discriminator 2 view .LVU290
 1065 0378 5BF80460 		ldr	r6, [fp, r4]
 1066              	.LVL105:
 135:back_propagation.c ****                 }
 1067              		.loc 1 135 57 discriminator 2 view .LVU291
 1068 037c FFF7FEFF 		bl	__aeabi_dmul
 1069              	.LVL106:
 135:back_propagation.c ****                 }
 1070              		.loc 1 135 49 discriminator 2 view .LVU292
 1071 0380 06EBC706 		add	r6, r6, r7, lsl #3
 1072 0384 C6E90001 		strd	r0, [r6]
 1073              	.LBE8:
 130:back_propagation.c ****                     double error = 0.0;
 1074              		.loc 1 130 56 is_stmt 1 discriminator 2 view .LVU293
 130:back_propagation.c ****                     double error = 0.0;
 1075              		.loc 1 130 57 is_stmt 0 discriminator 2 view .LVU294
 1076 0388 0137     		adds	r7, r7, #1
 1077              	.LVL107:
 130:back_propagation.c ****                     double error = 0.0;
 1078              		.loc 1 130 57 discriminator 2 view .LVU295
 1079 038a C6E7     		b	.L69
 1080              	.LVL108:
 1081              	.L61:
 140:back_propagation.c **** 
 1082              		.loc 1 140 17 is_stmt 1 view .LVU296
 1083 038c 019B     		ldr	r3, [sp, #4]
 1084 038e 2A59     		ldr	r2, [r5, r4]
 1085 0390 53F80490 		ldr	r9, [r3, r4]
 1086              	.LVL109:
 140:back_propagation.c **** 
 1087              		.loc 1 140 17 is_stmt 0 view .LVU297
 1088 0394 3959     		ldr	r1, [r7, r4]
 1089 0396 58F80400 		ldr	r0, [r8, r4]
 1090 039a 4B46     		mov	r3, r9
 1091 039c FFF7FEFF 		bl	d_tanh
 1092              	.LVL110:
 142:back_propagation.c ****                     double error = 0.0;
 1093              		.loc 1 142 17 is_stmt 1 view .LVU298
 142:back_propagation.c ****                     double error = 0.0;
 1094              		.loc 1 142 44 is_stmt 0 view .LVU299
 1095 03a0 58F80430 		ldr	r3, [r8, r4]
 1096 03a4 0693     		str	r3, [sp, #24]
 1097              	.LBB9:
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1098              		.loc 1 144 48 view .LVU300
 1099 03a6 08EB0603 		add	r3, r8, r6
 1100 03aa 0493     		str	r3, [sp, #16]
 145:back_propagation.c **** 
 1101              		.loc 1 145 48 view .LVU301
 1102 03ac 0BEB0605 		add	r5, fp, r6
 1103 03b0 A9F10808 		sub	r8, r9, #8
 1104              	.LVL111:
 145:back_propagation.c **** 
 1105              		.loc 1 145 48 view .LVU302
 1106              	.LBE9:
 142:back_propagation.c ****                     double error = 0.0;
 1107              		.loc 1 142 24 view .LVU303
 1108 03b4 0027     		movs	r7, #0
 1109              	.LVL112:
 1110              	.L73:
 142:back_propagation.c ****                     double error = 0.0;
 1111              		.loc 1 142 29 is_stmt 1 discriminator 1 view .LVU304
 142:back_propagation.c ****                     double error = 0.0;
 1112              		.loc 1 142 17 is_stmt 0 discriminator 1 view .LVU305
 1113 03b6 069B     		ldr	r3, [sp, #24]
 1114 03b8 BB42     		cmp	r3, r7
 1115 03ba 7FF792AE 		ble	.L67
 1116              	.LBB10:
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1117              		.loc 1 144 48 view .LVU306
 1118 03be 049B     		ldr	r3, [sp, #16]
 1119 03c0 1B68     		ldr	r3, [r3]
 1120 03c2 0593     		str	r3, [sp, #20]
 1121 03c4 BB00     		lsls	r3, r7, #2
 1122 03c6 0793     		str	r3, [sp, #28]
 143:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 1123              		.loc 1 143 28 view .LVU307
 1124 03c8 4FF00009 		mov	r9, #0
 1125 03cc 4FF0000A 		mov	r10, #0
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1126              		.loc 1 144 28 view .LVU308
 1127 03d0 0026     		movs	r6, #0
 1128 03d2 18E0     		b	.L75
 1129              	.LVL113:
 1130              	.L74:
 145:back_propagation.c **** 
 1131              		.loc 1 145 25 is_stmt 1 discriminator 3 view .LVU309
 145:back_propagation.c **** 
 1132              		.loc 1 145 79 is_stmt 0 discriminator 3 view .LVU310
 1133 03d4 029B     		ldr	r3, [sp, #8]
 145:back_propagation.c **** 
 1134              		.loc 1 145 92 discriminator 3 view .LVU311
 1135 03d6 079A     		ldr	r2, [sp, #28]
 145:back_propagation.c **** 
 1136              		.loc 1 145 79 discriminator 3 view .LVU312
 1137 03d8 DB6B     		ldr	r3, [r3, #60]
 145:back_propagation.c **** 
 1138              		.loc 1 145 89 discriminator 3 view .LVU313
 1139 03da 1B59     		ldr	r3, [r3, r4]
 145:back_propagation.c **** 
 1140              		.loc 1 145 92 discriminator 3 view .LVU314
 1141 03dc 9958     		ldr	r1, [r3, r2]
 145:back_propagation.c **** 
 1142              		.loc 1 145 60 discriminator 3 view .LVU315
 1143 03de 2B68     		ldr	r3, [r5]
 145:back_propagation.c **** 
 1144              		.loc 1 145 92 discriminator 3 view .LVU316
 1145 03e0 01EBC601 		add	r1, r1, r6, lsl #3
 145:back_propagation.c **** 
 1146              		.loc 1 145 60 discriminator 3 view .LVU317
 1147 03e4 03EBC603 		add	r3, r3, r6, lsl #3
 145:back_propagation.c **** 
 1148              		.loc 1 145 64 discriminator 3 view .LVU318
 1149 03e8 D3E90023 		ldrd	r2, [r3]
 1150 03ec D1E90001 		ldrd	r0, [r1]
 1151 03f0 FFF7FEFF 		bl	__aeabi_dmul
 1152              	.LVL114:
 1153 03f4 0246     		mov	r2, r0
 1154 03f6 0B46     		mov	r3, r1
 145:back_propagation.c **** 
 1155              		.loc 1 145 31 discriminator 3 view .LVU319
 1156 03f8 4846     		mov	r0, r9
 1157 03fa 5146     		mov	r1, r10
 1158 03fc FFF7FEFF 		bl	__aeabi_dadd
 1159              	.LVL115:
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1160              		.loc 1 144 63 discriminator 3 view .LVU320
 1161 0400 0136     		adds	r6, r6, #1
 1162              	.LVL116:
 145:back_propagation.c **** 
 1163              		.loc 1 145 31 discriminator 3 view .LVU321
 1164 0402 8146     		mov	r9, r0
 1165              	.LVL117:
 145:back_propagation.c **** 
 1166              		.loc 1 145 31 discriminator 3 view .LVU322
 1167 0404 8A46     		mov	r10, r1
 1168              	.LVL118:
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1169              		.loc 1 144 62 is_stmt 1 discriminator 3 view .LVU323
 1170              	.L75:
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1171              		.loc 1 144 33 discriminator 1 view .LVU324
 144:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1172              		.loc 1 144 21 is_stmt 0 discriminator 1 view .LVU325
 1173 0406 059B     		ldr	r3, [sp, #20]
 1174 0408 B342     		cmp	r3, r6
 1175 040a E3DC     		bgt	.L74
 147:back_propagation.c ****                 }
 1176              		.loc 1 147 21 is_stmt 1 discriminator 2 view .LVU326
 147:back_propagation.c ****                 }
 1177              		.loc 1 147 57 is_stmt 0 discriminator 2 view .LVU327
 1178 040c F8E90201 		ldrd	r0, [r8, #8]!
 1179 0410 4A46     		mov	r2, r9
 1180 0412 5346     		mov	r3, r10
 147:back_propagation.c ****                 }
 1181              		.loc 1 147 49 discriminator 2 view .LVU328
 1182 0414 5BF80460 		ldr	r6, [fp, r4]
 1183              	.LVL119:
 147:back_propagation.c ****                 }
 1184              		.loc 1 147 57 discriminator 2 view .LVU329
 1185 0418 FFF7FEFF 		bl	__aeabi_dmul
 1186              	.LVL120:
 147:back_propagation.c ****                 }
 1187              		.loc 1 147 49 discriminator 2 view .LVU330
 1188 041c 06EBC706 		add	r6, r6, r7, lsl #3
 1189 0420 C6E90001 		strd	r0, [r6]
 1190              	.LBE10:
 142:back_propagation.c ****                     double error = 0.0;
 1191              		.loc 1 142 56 is_stmt 1 discriminator 2 view .LVU331
 142:back_propagation.c ****                     double error = 0.0;
 1192              		.loc 1 142 57 is_stmt 0 discriminator 2 view .LVU332
 1193 0424 0137     		adds	r7, r7, #1
 1194              	.LVL121:
 142:back_propagation.c ****                     double error = 0.0;
 1195              		.loc 1 142 57 discriminator 2 view .LVU333
 1196 0426 C6E7     		b	.L73
 1197              	.LVL122:
 1198              	.L60:
 152:back_propagation.c **** 
 1199              		.loc 1 152 17 is_stmt 1 view .LVU334
 1200 0428 019B     		ldr	r3, [sp, #4]
 1201 042a 2A59     		ldr	r2, [r5, r4]
 1202 042c 53F80490 		ldr	r9, [r3, r4]
 1203              	.LVL123:
 152:back_propagation.c **** 
 1204              		.loc 1 152 17 is_stmt 0 view .LVU335
 1205 0430 3959     		ldr	r1, [r7, r4]
 1206 0432 58F80400 		ldr	r0, [r8, r4]
 1207 0436 4B46     		mov	r3, r9
 1208 0438 FFF7FEFF 		bl	d_relu
 1209              	.LVL124:
 154:back_propagation.c ****                     double error = 0.0;
 1210              		.loc 1 154 17 is_stmt 1 view .LVU336
 154:back_propagation.c ****                     double error = 0.0;
 1211              		.loc 1 154 44 is_stmt 0 view .LVU337
 1212 043c 58F80430 		ldr	r3, [r8, r4]
 1213 0440 0693     		str	r3, [sp, #24]
 1214              	.LBB11:
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1215              		.loc 1 156 48 view .LVU338
 1216 0442 08EB0603 		add	r3, r8, r6
 1217 0446 0493     		str	r3, [sp, #16]
 157:back_propagation.c **** 
 1218              		.loc 1 157 48 view .LVU339
 1219 0448 0BEB0605 		add	r5, fp, r6
 1220 044c A9F10808 		sub	r8, r9, #8
 1221              	.LVL125:
 157:back_propagation.c **** 
 1222              		.loc 1 157 48 view .LVU340
 1223              	.LBE11:
 154:back_propagation.c ****                     double error = 0.0;
 1224              		.loc 1 154 24 view .LVU341
 1225 0450 0027     		movs	r7, #0
 1226              	.LVL126:
 1227              	.L76:
 154:back_propagation.c ****                     double error = 0.0;
 1228              		.loc 1 154 29 is_stmt 1 discriminator 1 view .LVU342
 154:back_propagation.c ****                     double error = 0.0;
 1229              		.loc 1 154 17 is_stmt 0 discriminator 1 view .LVU343
 1230 0452 069B     		ldr	r3, [sp, #24]
 1231 0454 BB42     		cmp	r3, r7
 1232 0456 7FF744AE 		ble	.L67
 1233              	.LBB12:
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1234              		.loc 1 156 48 view .LVU344
 1235 045a 049B     		ldr	r3, [sp, #16]
 1236 045c 1B68     		ldr	r3, [r3]
 1237 045e 0593     		str	r3, [sp, #20]
 1238 0460 BB00     		lsls	r3, r7, #2
 1239 0462 0793     		str	r3, [sp, #28]
 155:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 1240              		.loc 1 155 28 view .LVU345
 1241 0464 4FF00009 		mov	r9, #0
 1242 0468 4FF0000A 		mov	r10, #0
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1243              		.loc 1 156 28 view .LVU346
 1244 046c 0026     		movs	r6, #0
 1245 046e 18E0     		b	.L78
 1246              	.LVL127:
 1247              	.L77:
 157:back_propagation.c **** 
 1248              		.loc 1 157 25 is_stmt 1 discriminator 3 view .LVU347
 157:back_propagation.c **** 
 1249              		.loc 1 157 79 is_stmt 0 discriminator 3 view .LVU348
 1250 0470 029B     		ldr	r3, [sp, #8]
 157:back_propagation.c **** 
 1251              		.loc 1 157 92 discriminator 3 view .LVU349
 1252 0472 079A     		ldr	r2, [sp, #28]
 157:back_propagation.c **** 
 1253              		.loc 1 157 79 discriminator 3 view .LVU350
 1254 0474 DB6B     		ldr	r3, [r3, #60]
 157:back_propagation.c **** 
 1255              		.loc 1 157 89 discriminator 3 view .LVU351
 1256 0476 1B59     		ldr	r3, [r3, r4]
 157:back_propagation.c **** 
 1257              		.loc 1 157 92 discriminator 3 view .LVU352
 1258 0478 9958     		ldr	r1, [r3, r2]
 157:back_propagation.c **** 
 1259              		.loc 1 157 60 discriminator 3 view .LVU353
 1260 047a 2B68     		ldr	r3, [r5]
 157:back_propagation.c **** 
 1261              		.loc 1 157 92 discriminator 3 view .LVU354
 1262 047c 01EBC601 		add	r1, r1, r6, lsl #3
 157:back_propagation.c **** 
 1263              		.loc 1 157 60 discriminator 3 view .LVU355
 1264 0480 03EBC603 		add	r3, r3, r6, lsl #3
 157:back_propagation.c **** 
 1265              		.loc 1 157 64 discriminator 3 view .LVU356
 1266 0484 D3E90023 		ldrd	r2, [r3]
 1267 0488 D1E90001 		ldrd	r0, [r1]
 1268 048c FFF7FEFF 		bl	__aeabi_dmul
 1269              	.LVL128:
 1270 0490 0246     		mov	r2, r0
 1271 0492 0B46     		mov	r3, r1
 157:back_propagation.c **** 
 1272              		.loc 1 157 31 discriminator 3 view .LVU357
 1273 0494 4846     		mov	r0, r9
 1274 0496 5146     		mov	r1, r10
 1275 0498 FFF7FEFF 		bl	__aeabi_dadd
 1276              	.LVL129:
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1277              		.loc 1 156 63 discriminator 3 view .LVU358
 1278 049c 0136     		adds	r6, r6, #1
 1279              	.LVL130:
 157:back_propagation.c **** 
 1280              		.loc 1 157 31 discriminator 3 view .LVU359
 1281 049e 8146     		mov	r9, r0
 1282              	.LVL131:
 157:back_propagation.c **** 
 1283              		.loc 1 157 31 discriminator 3 view .LVU360
 1284 04a0 8A46     		mov	r10, r1
 1285              	.LVL132:
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1286              		.loc 1 156 62 is_stmt 1 discriminator 3 view .LVU361
 1287              	.L78:
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1288              		.loc 1 156 33 discriminator 1 view .LVU362
 156:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1289              		.loc 1 156 21 is_stmt 0 discriminator 1 view .LVU363
 1290 04a2 059B     		ldr	r3, [sp, #20]
 1291 04a4 B342     		cmp	r3, r6
 1292 04a6 E3DC     		bgt	.L77
 159:back_propagation.c ****                 }
 1293              		.loc 1 159 21 is_stmt 1 discriminator 2 view .LVU364
 159:back_propagation.c ****                 }
 1294              		.loc 1 159 57 is_stmt 0 discriminator 2 view .LVU365
 1295 04a8 F8E90201 		ldrd	r0, [r8, #8]!
 1296 04ac 4A46     		mov	r2, r9
 1297 04ae 5346     		mov	r3, r10
 159:back_propagation.c ****                 }
 1298              		.loc 1 159 49 discriminator 2 view .LVU366
 1299 04b0 5BF80460 		ldr	r6, [fp, r4]
 1300              	.LVL133:
 159:back_propagation.c ****                 }
 1301              		.loc 1 159 57 discriminator 2 view .LVU367
 1302 04b4 FFF7FEFF 		bl	__aeabi_dmul
 1303              	.LVL134:
 159:back_propagation.c ****                 }
 1304              		.loc 1 159 49 discriminator 2 view .LVU368
 1305 04b8 06EBC706 		add	r6, r6, r7, lsl #3
 1306 04bc C6E90001 		strd	r0, [r6]
 1307              	.LBE12:
 154:back_propagation.c ****                     double error = 0.0;
 1308              		.loc 1 154 56 is_stmt 1 discriminator 2 view .LVU369
 154:back_propagation.c ****                     double error = 0.0;
 1309              		.loc 1 154 57 is_stmt 0 discriminator 2 view .LVU370
 1310 04c0 0137     		adds	r7, r7, #1
 1311              	.LVL135:
 154:back_propagation.c ****                     double error = 0.0;
 1312              		.loc 1 154 57 discriminator 2 view .LVU371
 1313 04c2 C6E7     		b	.L76
 1314              	.L85:
 1315              		.align	2
 1316              	.L84:
 1317 04c4 00000000 		.word	.LC0
 1318              	.LVL136:
 1319              	.L58:
 164:back_propagation.c **** 
 1320              		.loc 1 164 17 is_stmt 1 view .LVU372
 1321 04c8 019B     		ldr	r3, [sp, #4]
 1322 04ca 2A59     		ldr	r2, [r5, r4]
 1323 04cc 53F80490 		ldr	r9, [r3, r4]
 1324              	.LVL137:
 164:back_propagation.c **** 
 1325              		.loc 1 164 17 is_stmt 0 view .LVU373
 1326 04d0 3959     		ldr	r1, [r7, r4]
 1327 04d2 58F80400 		ldr	r0, [r8, r4]
 1328 04d6 4B46     		mov	r3, r9
 1329 04d8 FFF7FEFF 		bl	d_sigmoid
 1330              	.LVL138:
 166:back_propagation.c ****                     double error = 0.0;
 1331              		.loc 1 166 17 is_stmt 1 view .LVU374
 166:back_propagation.c ****                     double error = 0.0;
 1332              		.loc 1 166 44 is_stmt 0 view .LVU375
 1333 04dc 58F80430 		ldr	r3, [r8, r4]
 1334 04e0 0693     		str	r3, [sp, #24]
 1335              	.LBB13:
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1336              		.loc 1 168 48 view .LVU376
 1337 04e2 08EB0603 		add	r3, r8, r6
 1338 04e6 0493     		str	r3, [sp, #16]
 169:back_propagation.c **** 
 1339              		.loc 1 169 48 view .LVU377
 1340 04e8 0BEB0605 		add	r5, fp, r6
 1341 04ec A9F10808 		sub	r8, r9, #8
 1342              	.LVL139:
 169:back_propagation.c **** 
 1343              		.loc 1 169 48 view .LVU378
 1344              	.LBE13:
 166:back_propagation.c ****                     double error = 0.0;
 1345              		.loc 1 166 24 view .LVU379
 1346 04f0 0027     		movs	r7, #0
 1347              	.LVL140:
 1348              	.L79:
 166:back_propagation.c ****                     double error = 0.0;
 1349              		.loc 1 166 29 is_stmt 1 discriminator 1 view .LVU380
 166:back_propagation.c ****                     double error = 0.0;
 1350              		.loc 1 166 17 is_stmt 0 discriminator 1 view .LVU381
 1351 04f2 069B     		ldr	r3, [sp, #24]
 1352 04f4 BB42     		cmp	r3, r7
 1353 04f6 7FF7F4AD 		ble	.L67
 1354              	.LBB14:
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1355              		.loc 1 168 48 view .LVU382
 1356 04fa 049B     		ldr	r3, [sp, #16]
 1357 04fc 1B68     		ldr	r3, [r3]
 1358 04fe 0593     		str	r3, [sp, #20]
 1359 0500 BB00     		lsls	r3, r7, #2
 1360 0502 0793     		str	r3, [sp, #28]
 167:back_propagation.c ****                     for (j = 0; j < layer_sizes[layer_no+1]; j++)
 1361              		.loc 1 167 28 view .LVU383
 1362 0504 4FF00009 		mov	r9, #0
 1363 0508 4FF0000A 		mov	r10, #0
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1364              		.loc 1 168 28 view .LVU384
 1365 050c 0026     		movs	r6, #0
 1366 050e 18E0     		b	.L81
 1367              	.LVL141:
 1368              	.L80:
 169:back_propagation.c **** 
 1369              		.loc 1 169 25 is_stmt 1 discriminator 3 view .LVU385
 169:back_propagation.c **** 
 1370              		.loc 1 169 79 is_stmt 0 discriminator 3 view .LVU386
 1371 0510 029B     		ldr	r3, [sp, #8]
 169:back_propagation.c **** 
 1372              		.loc 1 169 92 discriminator 3 view .LVU387
 1373 0512 079A     		ldr	r2, [sp, #28]
 169:back_propagation.c **** 
 1374              		.loc 1 169 79 discriminator 3 view .LVU388
 1375 0514 DB6B     		ldr	r3, [r3, #60]
 169:back_propagation.c **** 
 1376              		.loc 1 169 89 discriminator 3 view .LVU389
 1377 0516 1B59     		ldr	r3, [r3, r4]
 169:back_propagation.c **** 
 1378              		.loc 1 169 92 discriminator 3 view .LVU390
 1379 0518 9958     		ldr	r1, [r3, r2]
 169:back_propagation.c **** 
 1380              		.loc 1 169 60 discriminator 3 view .LVU391
 1381 051a 2B68     		ldr	r3, [r5]
 169:back_propagation.c **** 
 1382              		.loc 1 169 92 discriminator 3 view .LVU392
 1383 051c 01EBC601 		add	r1, r1, r6, lsl #3
 169:back_propagation.c **** 
 1384              		.loc 1 169 60 discriminator 3 view .LVU393
 1385 0520 03EBC603 		add	r3, r3, r6, lsl #3
 169:back_propagation.c **** 
 1386              		.loc 1 169 64 discriminator 3 view .LVU394
 1387 0524 D3E90023 		ldrd	r2, [r3]
 1388 0528 D1E90001 		ldrd	r0, [r1]
 1389 052c FFF7FEFF 		bl	__aeabi_dmul
 1390              	.LVL142:
 1391 0530 0246     		mov	r2, r0
 1392 0532 0B46     		mov	r3, r1
 169:back_propagation.c **** 
 1393              		.loc 1 169 31 discriminator 3 view .LVU395
 1394 0534 4846     		mov	r0, r9
 1395 0536 5146     		mov	r1, r10
 1396 0538 FFF7FEFF 		bl	__aeabi_dadd
 1397              	.LVL143:
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1398              		.loc 1 168 63 discriminator 3 view .LVU396
 1399 053c 0136     		adds	r6, r6, #1
 1400              	.LVL144:
 169:back_propagation.c **** 
 1401              		.loc 1 169 31 discriminator 3 view .LVU397
 1402 053e 8146     		mov	r9, r0
 1403              	.LVL145:
 169:back_propagation.c **** 
 1404              		.loc 1 169 31 discriminator 3 view .LVU398
 1405 0540 8A46     		mov	r10, r1
 1406              	.LVL146:
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1407              		.loc 1 168 62 is_stmt 1 discriminator 3 view .LVU399
 1408              	.L81:
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1409              		.loc 1 168 33 discriminator 1 view .LVU400
 168:back_propagation.c ****                         error += local_gradient[layer_no+1][j] * param->weight[layer_no][i][j];
 1410              		.loc 1 168 21 is_stmt 0 discriminator 1 view .LVU401
 1411 0542 059B     		ldr	r3, [sp, #20]
 1412 0544 B342     		cmp	r3, r6
 1413 0546 E3DC     		bgt	.L80
 171:back_propagation.c ****                 }
 1414              		.loc 1 171 21 is_stmt 1 discriminator 2 view .LVU402
 171:back_propagation.c ****                 }
 1415              		.loc 1 171 57 is_stmt 0 discriminator 2 view .LVU403
 1416 0548 F8E90201 		ldrd	r0, [r8, #8]!
 1417 054c 4A46     		mov	r2, r9
 1418 054e 5346     		mov	r3, r10
 171:back_propagation.c ****                 }
 1419              		.loc 1 171 49 discriminator 2 view .LVU404
 1420 0550 5BF80460 		ldr	r6, [fp, r4]
 1421              	.LVL147:
 171:back_propagation.c ****                 }
 1422              		.loc 1 171 57 discriminator 2 view .LVU405
 1423 0554 FFF7FEFF 		bl	__aeabi_dmul
 1424              	.LVL148:
 171:back_propagation.c ****                 }
 1425              		.loc 1 171 49 discriminator 2 view .LVU406
 1426 0558 06EBC706 		add	r6, r6, r7, lsl #3
 1427 055c C6E90001 		strd	r0, [r6]
 1428              	.LBE14:
 166:back_propagation.c ****                     double error = 0.0;
 1429              		.loc 1 166 56 is_stmt 1 discriminator 2 view .LVU407
 166:back_propagation.c ****                     double error = 0.0;
 1430              		.loc 1 166 57 is_stmt 0 discriminator 2 view .LVU408
 1431 0560 0137     		adds	r7, r7, #1
 1432              	.LVL149:
 166:back_propagation.c ****                     double error = 0.0;
 1433              		.loc 1 166 57 discriminator 2 view .LVU409
 1434 0562 C6E7     		b	.L79
 1435              	.LVL150:
 1436              	.L57:
 176:back_propagation.c ****                 exit(0);
 1437              		.loc 1 176 17 is_stmt 1 view .LVU410
 1438 0564 0448     		ldr	r0, .L86
 1439 0566 5BE6     		b	.L83
 1440              	.LVL151:
 1441              	.L82:
 176:back_propagation.c ****                 exit(0);
 1442              		.loc 1 176 17 is_stmt 0 view .LVU411
 1443              	.LBE16:
 184:back_propagation.c **** 
 1444              		.loc 1 184 9 is_stmt 1 discriminator 3 view .LVU412
 1445 0568 019B     		ldr	r3, [sp, #4]
 1446 056a 53F82400 		ldr	r0, [r3, r4, lsl #2]
 1447 056e FFF7FEFF 		bl	free
 1448              	.LVL152:
 183:back_propagation.c ****         free(layer_derivatives[i]);
 1449              		.loc 1 183 31 discriminator 3 view .LVU413
 183:back_propagation.c ****         free(layer_derivatives[i]);
 1450              		.loc 1 183 32 is_stmt 0 discriminator 3 view .LVU414
 1451 0572 0134     		adds	r4, r4, #1
 1452              	.LVL153:
 183:back_propagation.c ****         free(layer_derivatives[i]);
 1453              		.loc 1 183 32 discriminator 3 view .LVU415
 1454 0574 B6E5     		b	.L56
 1455              	.L87:
 1456 0576 00BF     		.align	2
 1457              	.L86:
 1458 0578 3D000000 		.word	.LC1
 1459              		.cfi_endproc
 1460              	.LFE8:
 1462              		.global	__aeabi_d2iz
 1463              		.section	.text.back_propagation,"ax",%progbits
 1464              		.align	1
 1465              		.global	back_propagation
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu softvfp
 1471              	back_propagation:
 1472              	.LVL154:
 1473              	.LFB9:
 189:back_propagation.c **** 
 190:back_propagation.c **** void back_propagation(parameters* param, int training_example, int n_layers, int* layer_sizes, doub
 1474              		.loc 1 190 143 is_stmt 1 view -0
 1475              		.cfi_startproc
 1476              		@ args = 8, pretend = 0, frame = 48
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 191:back_propagation.c ****     /* ------------------ Expected output ----------------------------------------*/
 192:back_propagation.c ****     // Get the expected output from the data matrix
 193:back_propagation.c ****     // Create memory for the expected output array
 194:back_propagation.c ****     // Initialized to zero's
 195:back_propagation.c ****     double* expected_output = (double*)calloc(param->output_layer_size, sizeof(double));
 1478              		.loc 1 195 5 view .LVU417
 190:back_propagation.c ****     /* ------------------ Expected output ----------------------------------------*/
 1479              		.loc 1 190 143 is_stmt 0 view .LVU418
 1480 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1481              	.LCFI9:
 1482              		.cfi_def_cfa_offset 36
 1483              		.cfi_offset 4, -36
 1484              		.cfi_offset 5, -32
 1485              		.cfi_offset 6, -28
 1486              		.cfi_offset 7, -24
 1487              		.cfi_offset 8, -20
 1488              		.cfi_offset 9, -16
 1489              		.cfi_offset 10, -12
 1490              		.cfi_offset 11, -8
 1491              		.cfi_offset 14, -4
 1492 0004 91B0     		sub	sp, sp, #68
 1493              	.LCFI10:
 1494              		.cfi_def_cfa_offset 104
 1495              		.loc 1 195 52 view .LVU419
 1496 0006 076A     		ldr	r7, [r0, #32]
 190:back_propagation.c ****     /* ------------------ Expected output ----------------------------------------*/
 1497              		.loc 1 190 143 view .LVU420
 1498 0008 0546     		mov	r5, r0
 1499 000a 1C46     		mov	r4, r3
 1500 000c 1A9B     		ldr	r3, [sp, #104]
 1501              	.LVL155:
 190:back_propagation.c ****     /* ------------------ Expected output ----------------------------------------*/
 1502              		.loc 1 190 143 view .LVU421
 1503 000e 0A93     		str	r3, [sp, #40]
 1504 0010 0E46     		mov	r6, r1
 1505 0012 1B9B     		ldr	r3, [sp, #108]
 1506 0014 0793     		str	r3, [sp, #28]
 1507              		.loc 1 195 40 view .LVU422
 1508 0016 0821     		movs	r1, #8
 1509              	.LVL156:
 1510              		.loc 1 195 40 view .LVU423
 1511 0018 3846     		mov	r0, r7
 1512              	.LVL157:
 190:back_propagation.c ****     /* ------------------ Expected output ----------------------------------------*/
 1513              		.loc 1 190 143 view .LVU424
 1514 001a 9346     		mov	fp, r2
 1515              		.loc 1 195 40 view .LVU425
 1516 001c FFF7FEFF 		bl	calloc
 1517              	.LVL158:
 196:back_propagation.c **** 
 197:back_propagation.c ****     // Make the respective element in expected_output to 1 and rest all 0
 198:back_propagation.c ****     // Ex: If y = 3 and output_layer_size = 4 then expected_output = [0, 0, 1, 0]
 199:back_propagation.c ****     if (param->output_layer_size == 1)
 200:back_propagation.c ****         expected_output[0] = param->data_train[training_example][param->feature_size-1];
 1518              		.loc 1 200 47 view .LVU426
 1519 0020 AB6A     		ldr	r3, [r5, #40]
 1520              		.loc 1 200 65 view .LVU427
 1521 0022 2A6B     		ldr	r2, [r5, #48]
 1522 0024 53F82630 		ldr	r3, [r3, r6, lsl #2]
 195:back_propagation.c **** 
 1523              		.loc 1 195 40 view .LVU428
 1524 0028 0690     		str	r0, [sp, #24]
 1525              	.LVL159:
 199:back_propagation.c ****         expected_output[0] = param->data_train[training_example][param->feature_size-1];
 1526              		.loc 1 199 5 is_stmt 1 view .LVU429
 1527              		.loc 1 200 65 is_stmt 0 view .LVU430
 1528 002a 03EBC203 		add	r3, r3, r2, lsl #3
 199:back_propagation.c ****         expected_output[0] = param->data_train[training_example][param->feature_size-1];
 1529              		.loc 1 199 8 view .LVU431
 1530 002e 012F     		cmp	r7, #1
 1531              		.loc 1 200 65 view .LVU432
 1532 0030 53E90201 		ldrd	r0, [r3, #-8]
 1533              	.LVL160:
 199:back_propagation.c ****         expected_output[0] = param->data_train[training_example][param->feature_size-1];
 1534              		.loc 1 199 8 view .LVU433
 1535 0034 48D1     		bne	.L89
 1536              		.loc 1 200 9 is_stmt 1 view .LVU434
 1537              		.loc 1 200 28 is_stmt 0 view .LVU435
 1538 0036 069B     		ldr	r3, [sp, #24]
 1539 0038 C3E90001 		strd	r0, [r3]
 1540              	.L90:
 201:back_propagation.c ****     else 
 202:back_propagation.c ****         expected_output[(int)(param->data_train[training_example][param->feature_size-1] - 1)] = 1;
 203:back_propagation.c **** 
 204:back_propagation.c ****     /* ---------------------- Weight correction Memory allocation ---------------------------------
 205:back_propagation.c ****     // Create memory for the weight_correction matrices between layers
 206:back_propagation.c ****     // weight_correction is a pointer to the array of 2D arrays between the layers
 207:back_propagation.c ****     double*** weight_correction = (double***)calloc(n_layers-1, sizeof(double**));
 1541              		.loc 1 207 5 is_stmt 1 view .LVU436
 1542              		.loc 1 207 61 is_stmt 0 view .LVU437
 1543 003c 0BF1FF33 		add	r3, fp, #-1
 1544              		.loc 1 207 46 view .LVU438
 1545 0040 0421     		movs	r1, #4
 1546 0042 1846     		mov	r0, r3
 1547              		.loc 1 207 61 view .LVU439
 1548 0044 0593     		str	r3, [sp, #20]
 1549              		.loc 1 207 46 view .LVU440
 1550 0046 FFF7FEFF 		bl	calloc
 1551              	.LVL161:
 208:back_propagation.c **** 
 209:back_propagation.c ****     // Each 2D array between two layers i and i+1 is of size ((layer_size[i]+1) x layer_size[i+1])
 210:back_propagation.c ****     // The weight_correction matrix includes weight corrections for the bias terms too
 211:back_propagation.c ****     int i;
 212:back_propagation.c ****     for (i = 0; i < n_layers-1; i++)
 1552              		.loc 1 212 12 view .LVU441
 1553 004a 0027     		movs	r7, #0
 207:back_propagation.c **** 
 1554              		.loc 1 207 46 view .LVU442
 1555 004c 0646     		mov	r6, r0
 1556              	.LVL162:
 211:back_propagation.c ****     for (i = 0; i < n_layers-1; i++)
 1557              		.loc 1 211 5 is_stmt 1 view .LVU443
 1558              		.loc 1 212 5 view .LVU444
 1559              	.L91:
 1560              		.loc 1 212 17 discriminator 1 view .LVU445
 1561              		.loc 1 212 5 is_stmt 0 discriminator 1 view .LVU446
 1562 004e 059B     		ldr	r3, [sp, #20]
 1563 0050 BB42     		cmp	r3, r7
 1564 0052 47DC     		bgt	.L92
 1565 0054 0894     		str	r4, [sp, #32]
 1566              		.loc 1 212 5 view .LVU447
 1567 0056 A046     		mov	r8, r4
 213:back_propagation.c ****         weight_correction[i] = (double**)calloc(layer_sizes[i]+1, sizeof(double*));
 214:back_propagation.c **** 
 215:back_propagation.c ****     int j;
 216:back_propagation.c ****     for (i = 0; i < n_layers-1; i++)
 1568              		.loc 1 216 12 view .LVU448
 1569 0058 0027     		movs	r7, #0
 1570              	.LVL163:
 1571              	.L93:
 1572              		.loc 1 216 17 is_stmt 1 discriminator 1 view .LVU449
 1573              		.loc 1 216 5 is_stmt 0 discriminator 1 view .LVU450
 1574 005a 059B     		ldr	r3, [sp, #20]
 1575 005c BB42     		cmp	r3, r7
 1576 005e 5EDC     		bgt	.L120
 217:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 218:back_propagation.c ****             weight_correction[i][j] = (double*)calloc(layer_sizes[i+1], sizeof(double));
 219:back_propagation.c **** 
 220:back_propagation.c ****     /* --------------------- Local Gradient memory allocation -------------------------------------
 221:back_propagation.c ****     // Create memory for local gradient (delta) for each layer
 222:back_propagation.c ****     double** local_gradient = (double**)calloc(n_layers, sizeof(double*));
 1577              		.loc 1 222 5 is_stmt 1 view .LVU451
 1578              		.loc 1 222 41 is_stmt 0 view .LVU452
 1579 0060 0421     		movs	r1, #4
 1580 0062 5846     		mov	r0, fp
 1581 0064 FFF7FEFF 		bl	calloc
 1582              	.LVL164:
 223:back_propagation.c **** 
 224:back_propagation.c ****     for (i = 0; i < n_layers; i++)
 1583              		.loc 1 224 12 view .LVU453
 1584 0068 0027     		movs	r7, #0
 1585              	.LVL165:
 222:back_propagation.c **** 
 1586              		.loc 1 222 41 view .LVU454
 1587 006a 0490     		str	r0, [sp, #16]
 1588              	.LVL166:
 1589              		.loc 1 224 5 is_stmt 1 view .LVU455
 1590              	.L96:
 1591              		.loc 1 224 17 discriminator 1 view .LVU456
 1592              		.loc 1 224 5 is_stmt 0 discriminator 1 view .LVU457
 1593 006c 5F45     		cmp	r7, fp
 1594 006e 59DB     		blt	.L97
 225:back_propagation.c ****         local_gradient[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 226:back_propagation.c **** 
 227:back_propagation.c ****     /*----------- Calculate weight corrections for all layers' weights -------------------*/
 228:back_propagation.c ****     // Weight correction for the output layer
 229:back_propagation.c ****     calculate_local_gradient(param, n_layers-1, n_layers, layer_sizes, layer_inputs, layer_outputs,
 1595              		.loc 1 229 5 is_stmt 1 view .LVU458
 1596 0070 049B     		ldr	r3, [sp, #16]
 1597 0072 0393     		str	r3, [sp, #12]
 1598 0074 069B     		ldr	r3, [sp, #24]
 1599 0076 0293     		str	r3, [sp, #8]
 1600 0078 079B     		ldr	r3, [sp, #28]
 1601 007a 0193     		str	r3, [sp, #4]
 1602 007c 0A9B     		ldr	r3, [sp, #40]
 1603 007e 0599     		ldr	r1, [sp, #20]
 1604 0080 0093     		str	r3, [sp]
 1605 0082 5A46     		mov	r2, fp
 1606 0084 2346     		mov	r3, r4
 1607 0086 2846     		mov	r0, r5
 1608 0088 FFF7FEFF 		bl	calculate_local_gradient
 1609              	.LVL167:
 230:back_propagation.c ****     for (i = 0; i < param->output_layer_size; i++)
 1610              		.loc 1 230 5 view .LVU459
 1611              		.loc 1 230 26 is_stmt 0 view .LVU460
 1612 008c 2B6A     		ldr	r3, [r5, #32]
 1613 008e 0E93     		str	r3, [sp, #56]
 231:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1614              		.loc 1 231 36 view .LVU461
 1615 0090 0BF18043 		add	r3, fp, #1073741824
 1616 0094 023B     		subs	r3, r3, #2
 1617 0096 9A00     		lsls	r2, r3, #2
 232:back_propagation.c ****             weight_correction[n_layers-2][j][i] = (param->learning_rate) * local_gradient[n_layers-
 1618              		.loc 1 232 90 view .LVU462
 1619 0098 0499     		ldr	r1, [sp, #16]
 231:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1620              		.loc 1 231 36 view .LVU463
 1621 009a 04EB8303 		add	r3, r4, r3, lsl #2
 1622 009e 0C93     		str	r3, [sp, #48]
 1623              		.loc 1 232 90 view .LVU464
 1624 00a0 131D     		adds	r3, r2, #4
 1625 00a2 01EB0309 		add	r9, r1, r3
 1626              		.loc 1 232 121 view .LVU465
 1627 00a6 079B     		ldr	r3, [sp, #28]
 1628 00a8 1344     		add	r3, r3, r2
 1629 00aa 0993     		str	r3, [sp, #36]
 1630              		.loc 1 232 30 view .LVU466
 1631 00ac B318     		adds	r3, r6, r2
 1632 00ae 0B93     		str	r3, [sp, #44]
 230:back_propagation.c ****     for (i = 0; i < param->output_layer_size; i++)
 1633              		.loc 1 230 12 view .LVU467
 1634 00b0 4FF00008 		mov	r8, #0
 1635              	.LVL168:
 1636              	.L98:
 230:back_propagation.c ****     for (i = 0; i < param->output_layer_size; i++)
 1637              		.loc 1 230 17 is_stmt 1 discriminator 1 view .LVU468
 230:back_propagation.c ****     for (i = 0; i < param->output_layer_size; i++)
 1638              		.loc 1 230 5 is_stmt 0 discriminator 1 view .LVU469
 1639 00b4 0E9B     		ldr	r3, [sp, #56]
 1640 00b6 4345     		cmp	r3, r8
 1641 00b8 60DD     		ble	.L100
 231:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1642              		.loc 1 231 23 view .LVU470
 1643 00ba 0C9B     		ldr	r3, [sp, #48]
 1644 00bc 1B68     		ldr	r3, [r3]
 1645 00be 0D93     		str	r3, [sp, #52]
 1646 00c0 4FEAC80A 		lsl	r10, r8, #3
 231:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1647              		.loc 1 231 16 view .LVU471
 1648 00c4 0027     		movs	r7, #0
 1649 00c6 53E0     		b	.L101
 1650              	.LVL169:
 1651              	.L89:
 202:back_propagation.c **** 
 1652              		.loc 1 202 9 is_stmt 1 view .LVU472
 202:back_propagation.c **** 
 1653              		.loc 1 202 90 is_stmt 0 view .LVU473
 1654 00c8 894B     		ldr	r3, .L123
 1655 00ca 0022     		movs	r2, #0
 1656 00cc FFF7FEFF 		bl	__aeabi_dsub
 1657              	.LVL170:
 202:back_propagation.c **** 
 1658              		.loc 1 202 25 view .LVU474
 1659 00d0 FFF7FEFF 		bl	__aeabi_d2iz
 1660              	.LVL171:
 202:back_propagation.c **** 
 1661              		.loc 1 202 96 view .LVU475
 1662 00d4 069B     		ldr	r3, [sp, #24]
 1663 00d6 03EBC000 		add	r0, r3, r0, lsl #3
 1664 00da 854B     		ldr	r3, .L123
 1665 00dc 0022     		movs	r2, #0
 1666 00de C0E90023 		strd	r2, [r0]
 1667 00e2 ABE7     		b	.L90
 1668              	.LVL172:
 1669              	.L92:
 213:back_propagation.c **** 
 1670              		.loc 1 213 9 is_stmt 1 discriminator 3 view .LVU476
 213:back_propagation.c **** 
 1671              		.loc 1 213 63 is_stmt 0 discriminator 3 view .LVU477
 1672 00e4 54F82700 		ldr	r0, [r4, r7, lsl #2]
 213:back_propagation.c **** 
 1673              		.loc 1 213 42 discriminator 3 view .LVU478
 1674 00e8 0421     		movs	r1, #4
 1675 00ea 0130     		adds	r0, r0, #1
 1676 00ec FFF7FEFF 		bl	calloc
 1677              	.LVL173:
 213:back_propagation.c **** 
 1678              		.loc 1 213 30 discriminator 3 view .LVU479
 1679 00f0 46F82700 		str	r0, [r6, r7, lsl #2]
 212:back_propagation.c ****         weight_correction[i] = (double**)calloc(layer_sizes[i]+1, sizeof(double*));
 1680              		.loc 1 212 33 is_stmt 1 discriminator 3 view .LVU480
 212:back_propagation.c ****         weight_correction[i] = (double**)calloc(layer_sizes[i]+1, sizeof(double*));
 1681              		.loc 1 212 34 is_stmt 0 discriminator 3 view .LVU481
 1682 00f4 0137     		adds	r7, r7, #1
 1683              	.LVL174:
 212:back_propagation.c ****         weight_correction[i] = (double**)calloc(layer_sizes[i]+1, sizeof(double*));
 1684              		.loc 1 212 34 discriminator 3 view .LVU482
 1685 00f6 AAE7     		b	.L91
 1686              	.LVL175:
 1687              	.L94:
 218:back_propagation.c **** 
 1688              		.loc 1 218 13 is_stmt 1 discriminator 3 view .LVU483
 218:back_propagation.c **** 
 1689              		.loc 1 218 48 is_stmt 0 discriminator 3 view .LVU484
 1690 00f8 D8F80400 		ldr	r0, [r8, #4]
 218:back_propagation.c **** 
 1691              		.loc 1 218 33 discriminator 3 view .LVU485
 1692 00fc 56F827A0 		ldr	r10, [r6, r7, lsl #2]
 218:back_propagation.c **** 
 1693              		.loc 1 218 48 discriminator 3 view .LVU486
 1694 0100 0821     		movs	r1, #8
 1695 0102 FFF7FEFF 		bl	calloc
 1696              	.LVL176:
 218:back_propagation.c **** 
 1697              		.loc 1 218 37 discriminator 3 view .LVU487
 1698 0106 4AF82900 		str	r0, [r10, r9, lsl #2]
 217:back_propagation.c ****             weight_correction[i][j] = (double*)calloc(layer_sizes[i+1], sizeof(double));
 1699              		.loc 1 217 43 is_stmt 1 discriminator 3 view .LVU488
 217:back_propagation.c ****             weight_correction[i][j] = (double*)calloc(layer_sizes[i+1], sizeof(double));
 1700              		.loc 1 217 44 is_stmt 0 discriminator 3 view .LVU489
 1701 010a 09F10109 		add	r9, r9, #1
 1702              	.LVL177:
 1703              	.L95:
 217:back_propagation.c ****             weight_correction[i][j] = (double*)calloc(layer_sizes[i+1], sizeof(double));
 1704              		.loc 1 217 21 is_stmt 1 discriminator 1 view .LVU490
 217:back_propagation.c ****             weight_correction[i][j] = (double*)calloc(layer_sizes[i+1], sizeof(double));
 1705              		.loc 1 217 9 is_stmt 0 discriminator 1 view .LVU491
 1706 010e D8F80030 		ldr	r3, [r8]
 1707 0112 4B45     		cmp	r3, r9
 1708 0114 F0DA     		bge	.L94
 216:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 1709              		.loc 1 216 33 is_stmt 1 discriminator 2 view .LVU492
 216:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 1710              		.loc 1 216 34 is_stmt 0 discriminator 2 view .LVU493
 1711 0116 0137     		adds	r7, r7, #1
 1712              	.LVL178:
 216:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 1713              		.loc 1 216 34 discriminator 2 view .LVU494
 1714 0118 08F10408 		add	r8, r8, #4
 1715 011c 9DE7     		b	.L93
 1716              	.LVL179:
 1717              	.L120:
 217:back_propagation.c ****             weight_correction[i][j] = (double*)calloc(layer_sizes[i+1], sizeof(double));
 1718              		.loc 1 217 16 view .LVU495
 1719 011e 4FF00009 		mov	r9, #0
 1720 0122 F4E7     		b	.L95
 1721              	.LVL180:
 1722              	.L97:
 225:back_propagation.c **** 
 1723              		.loc 1 225 9 is_stmt 1 discriminator 3 view .LVU496
 225:back_propagation.c **** 
 1724              		.loc 1 225 38 is_stmt 0 discriminator 3 view .LVU497
 1725 0124 54F82700 		ldr	r0, [r4, r7, lsl #2]
 1726 0128 0821     		movs	r1, #8
 1727 012a FFF7FEFF 		bl	calloc
 1728              	.LVL181:
 225:back_propagation.c **** 
 1729              		.loc 1 225 27 discriminator 3 view .LVU498
 1730 012e 049B     		ldr	r3, [sp, #16]
 1731 0130 43F82700 		str	r0, [r3, r7, lsl #2]
 224:back_propagation.c ****         local_gradient[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 1732              		.loc 1 224 31 is_stmt 1 discriminator 3 view .LVU499
 224:back_propagation.c ****         local_gradient[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 1733              		.loc 1 224 32 is_stmt 0 discriminator 3 view .LVU500
 1734 0134 0137     		adds	r7, r7, #1
 1735              	.LVL182:
 224:back_propagation.c ****         local_gradient[i] = (double*)calloc(layer_sizes[i], sizeof(double));
 1736              		.loc 1 224 32 discriminator 3 view .LVU501
 1737 0136 99E7     		b	.L96
 1738              	.LVL183:
 1739              	.L99:
 1740              		.loc 1 232 13 is_stmt 1 discriminator 3 view .LVU502
 1741              		.loc 1 232 42 is_stmt 0 discriminator 3 view .LVU503
 1742 0138 0B9B     		ldr	r3, [sp, #44]
 1743 013a 1B68     		ldr	r3, [r3]
 1744              		.loc 1 232 49 discriminator 3 view .LVU504
 1745 013c 53F82730 		ldr	r3, [r3, r7, lsl #2]
 1746 0140 5344     		add	r3, r3, r10
 1747 0142 0F93     		str	r3, [sp, #60]
 1748              		.loc 1 232 102 discriminator 3 view .LVU505
 1749 0144 D9F80030 		ldr	r3, [r9]
 1750 0148 03EB0A01 		add	r1, r3, r10
 1751              		.loc 1 232 74 discriminator 3 view .LVU506
 1752 014c D1E90001 		ldrd	r0, [r1]
 1753 0150 D5E90423 		ldrd	r2, [r5, #16]
 1754 0154 FFF7FEFF 		bl	__aeabi_dmul
 1755              	.LVL184:
 1756              		.loc 1 232 133 discriminator 3 view .LVU507
 1757 0158 099B     		ldr	r3, [sp, #36]
 1758 015a 1B68     		ldr	r3, [r3]
 1759 015c 03EBC703 		add	r3, r3, r7, lsl #3
 1760              		.loc 1 232 106 discriminator 3 view .LVU508
 1761 0160 D3E90023 		ldrd	r2, [r3]
 1762 0164 FFF7FEFF 		bl	__aeabi_dmul
 1763              	.LVL185:
 1764              		.loc 1 232 49 discriminator 3 view .LVU509
 1765 0168 0F9B     		ldr	r3, [sp, #60]
 1766 016a C3E90001 		strd	r0, [r3]
 231:back_propagation.c ****             weight_correction[n_layers-2][j][i] = (param->learning_rate) * local_gradient[n_layers-
 1767              		.loc 1 231 52 is_stmt 1 discriminator 3 view .LVU510
 231:back_propagation.c ****             weight_correction[n_layers-2][j][i] = (param->learning_rate) * local_gradient[n_layers-
 1768              		.loc 1 231 53 is_stmt 0 discriminator 3 view .LVU511
 1769 016e 0137     		adds	r7, r7, #1
 1770              	.LVL186:
 1771              	.L101:
 231:back_propagation.c ****             weight_correction[n_layers-2][j][i] = (param->learning_rate) * local_gradient[n_layers-
 1772              		.loc 1 231 21 is_stmt 1 discriminator 1 view .LVU512
 231:back_propagation.c ****             weight_correction[n_layers-2][j][i] = (param->learning_rate) * local_gradient[n_layers-
 1773              		.loc 1 231 9 is_stmt 0 discriminator 1 view .LVU513
 1774 0170 0D9B     		ldr	r3, [sp, #52]
 1775 0172 BB42     		cmp	r3, r7
 1776 0174 E0DA     		bge	.L99
 230:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1777              		.loc 1 230 47 is_stmt 1 discriminator 2 view .LVU514
 230:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1778              		.loc 1 230 48 is_stmt 0 discriminator 2 view .LVU515
 1779 0176 08F10108 		add	r8, r8, #1
 1780              	.LVL187:
 230:back_propagation.c ****         for (j = 0; j < layer_sizes[n_layers-2]+1; j++)
 1781              		.loc 1 230 48 discriminator 2 view .LVU516
 1782 017a 9BE7     		b	.L98
 1783              	.LVL188:
 1784              	.L100:
 233:back_propagation.c **** 
 234:back_propagation.c ****     // Weight correction for the hidden layers
 235:back_propagation.c ****     int k;
 1785              		.loc 1 235 5 is_stmt 1 view .LVU517
 236:back_propagation.c ****     for (i = n_layers-2; i >= 1; i--) {
 1786              		.loc 1 236 5 view .LVU518
 1787              		.loc 1 236 12 is_stmt 0 view .LVU519
 1788 017c ABF10207 		sub	r7, fp, #2
 1789              	.LVL189:
 1790              		.loc 1 236 12 view .LVU520
 1791 0180 ABF10308 		sub	r8, fp, #3
 1792              	.L102:
 1793              		.loc 1 236 26 is_stmt 1 discriminator 1 view .LVU521
 1794              		.loc 1 236 5 is_stmt 0 discriminator 1 view .LVU522
 1795 0184 002F     		cmp	r7, #0
 1796 0186 0EDC     		bgt	.L107
 237:back_propagation.c ****         calculate_local_gradient(param, i, n_layers, layer_sizes, layer_inputs, layer_outputs, expe
 238:back_propagation.c **** 
 239:back_propagation.c ****         for (j = 0; j < layer_sizes[i]; j++) 
 240:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 241:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 242:back_propagation.c ****     }
 243:back_propagation.c **** 
 244:back_propagation.c ****     /*----------------- Update the weights -------------------------------------*/
 245:back_propagation.c ****     for (i = 0; i < n_layers-1; i++) {
 1797              		.loc 1 245 12 view .LVU523
 1798 0188 0027     		movs	r7, #0
 1799              	.LVL190:
 1800              	.L108:
 1801              		.loc 1 245 17 is_stmt 1 discriminator 1 view .LVU524
 1802              		.loc 1 245 5 is_stmt 0 discriminator 1 view .LVU525
 1803 018a 059B     		ldr	r3, [sp, #20]
 1804 018c BB42     		cmp	r3, r7
 1805 018e 40F39780 		ble	.L121
 1806 0192 BB00     		lsls	r3, r7, #2
 1807 0194 0993     		str	r3, [sp, #36]
 246:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++) {
 1808              		.loc 1 246 23 view .LVU526
 1809 0196 089B     		ldr	r3, [sp, #32]
 1810 0198 53F8042B 		ldr	r2, [r3], #4
 1811 019c 0B92     		str	r2, [sp, #44]
 1812 019e 0893     		str	r3, [sp, #32]
 1813              		.loc 1 246 16 view .LVU527
 1814 01a0 4FF00009 		mov	r9, #0
 1815 01a4 62E0     		b	.L113
 1816              	.L107:
 237:back_propagation.c ****         calculate_local_gradient(param, i, n_layers, layer_sizes, layer_inputs, layer_outputs, expe
 1817              		.loc 1 237 9 is_stmt 1 view .LVU528
 1818 01a6 049B     		ldr	r3, [sp, #16]
 1819 01a8 0393     		str	r3, [sp, #12]
 1820 01aa 069B     		ldr	r3, [sp, #24]
 1821 01ac 0293     		str	r3, [sp, #8]
 1822 01ae 079B     		ldr	r3, [sp, #28]
 1823 01b0 0193     		str	r3, [sp, #4]
 1824 01b2 0A9B     		ldr	r3, [sp, #40]
 1825 01b4 0093     		str	r3, [sp]
 1826 01b6 5A46     		mov	r2, fp
 1827 01b8 2346     		mov	r3, r4
 1828 01ba 3946     		mov	r1, r7
 1829 01bc 2846     		mov	r0, r5
 1830 01be FFF7FEFF 		bl	calculate_local_gradient
 1831              	.LVL191:
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1832              		.loc 1 239 9 view .LVU529
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1833              		.loc 1 239 36 is_stmt 0 view .LVU530
 1834 01c2 54F82730 		ldr	r3, [r4, r7, lsl #2]
 1835 01c6 0C93     		str	r3, [sp, #48]
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1836              		.loc 1 239 16 view .LVU531
 1837 01c8 4FF0000A 		mov	r10, #0
 1838              	.LVL192:
 1839              	.L103:
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1840              		.loc 1 239 21 is_stmt 1 discriminator 1 view .LVU532
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1841              		.loc 1 239 9 is_stmt 0 discriminator 1 view .LVU533
 1842 01cc 0C9B     		ldr	r3, [sp, #48]
 1843 01ce 5345     		cmp	r3, r10
 1844 01d0 2DDD     		ble	.L105
 240:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 1845              		.loc 1 240 27 view .LVU534
 1846 01d2 54F82830 		ldr	r3, [r4, r8, lsl #2]
 1847 01d6 0B93     		str	r3, [sp, #44]
 1848 01d8 4FEACA03 		lsl	r3, r10, #3
 1849 01dc 0993     		str	r3, [sp, #36]
 240:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 1850              		.loc 1 240 20 view .LVU535
 1851 01de 4FF00009 		mov	r9, #0
 1852 01e2 1EE0     		b	.L106
 1853              	.LVL193:
 1854              	.L104:
 241:back_propagation.c ****     }
 1855              		.loc 1 241 17 is_stmt 1 discriminator 3 view .LVU536
 241:back_propagation.c ****     }
 1856              		.loc 1 241 39 is_stmt 0 discriminator 3 view .LVU537
 1857 01e4 56F82830 		ldr	r3, [r6, r8, lsl #2]
 241:back_propagation.c ****     }
 1858              		.loc 1 241 46 discriminator 3 view .LVU538
 1859 01e8 099A     		ldr	r2, [sp, #36]
 1860 01ea 53F82930 		ldr	r3, [r3, r9, lsl #2]
 1861 01ee 1344     		add	r3, r3, r2
 1862 01f0 0D93     		str	r3, [sp, #52]
 241:back_propagation.c ****     }
 1863              		.loc 1 241 90 discriminator 3 view .LVU539
 1864 01f2 049B     		ldr	r3, [sp, #16]
 1865 01f4 53F82730 		ldr	r3, [r3, r7, lsl #2]
 1866 01f8 9918     		adds	r1, r3, r2
 241:back_propagation.c ****     }
 1867              		.loc 1 241 71 discriminator 3 view .LVU540
 1868 01fa D1E90001 		ldrd	r0, [r1]
 1869 01fe D5E90423 		ldrd	r2, [r5, #16]
 1870 0202 FFF7FEFF 		bl	__aeabi_dmul
 1871              	.LVL194:
 241:back_propagation.c ****     }
 1872              		.loc 1 241 114 discriminator 3 view .LVU541
 1873 0206 079B     		ldr	r3, [sp, #28]
 1874 0208 53F82830 		ldr	r3, [r3, r8, lsl #2]
 1875 020c 03EBC903 		add	r3, r3, r9, lsl #3
 241:back_propagation.c ****     }
 1876              		.loc 1 241 94 discriminator 3 view .LVU542
 1877 0210 D3E90023 		ldrd	r2, [r3]
 1878 0214 FFF7FEFF 		bl	__aeabi_dmul
 1879              	.LVL195:
 241:back_propagation.c ****     }
 1880              		.loc 1 241 46 discriminator 3 view .LVU543
 1881 0218 0D9B     		ldr	r3, [sp, #52]
 1882 021a C3E90001 		strd	r0, [r3]
 240:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 1883              		.loc 1 240 49 is_stmt 1 discriminator 3 view .LVU544
 240:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 1884              		.loc 1 240 50 is_stmt 0 discriminator 3 view .LVU545
 1885 021e 09F10109 		add	r9, r9, #1
 1886              	.LVL196:
 1887              	.L106:
 240:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 1888              		.loc 1 240 25 is_stmt 1 discriminator 1 view .LVU546
 240:back_propagation.c ****                 weight_correction[i-1][k][j] = (param->learning_rate) * local_gradient[i][j] * laye
 1889              		.loc 1 240 13 is_stmt 0 discriminator 1 view .LVU547
 1890 0222 0B9B     		ldr	r3, [sp, #44]
 1891 0224 4B45     		cmp	r3, r9
 1892 0226 DDDA     		bge	.L104
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1893              		.loc 1 239 41 is_stmt 1 discriminator 2 view .LVU548
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1894              		.loc 1 239 42 is_stmt 0 discriminator 2 view .LVU549
 1895 0228 0AF1010A 		add	r10, r10, #1
 1896              	.LVL197:
 239:back_propagation.c ****             for (k = 0; k < layer_sizes[i-1]+1; k++)
 1897              		.loc 1 239 42 discriminator 2 view .LVU550
 1898 022c CEE7     		b	.L103
 1899              	.LVL198:
 1900              	.L105:
 236:back_propagation.c ****         calculate_local_gradient(param, i, n_layers, layer_sizes, layer_inputs, layer_outputs, expe
 1901              		.loc 1 236 34 is_stmt 1 discriminator 2 view .LVU551
 236:back_propagation.c ****         calculate_local_gradient(param, i, n_layers, layer_sizes, layer_inputs, layer_outputs, expe
 1902              		.loc 1 236 35 is_stmt 0 discriminator 2 view .LVU552
 1903 022e 013F     		subs	r7, r7, #1
 1904              	.LVL199:
 236:back_propagation.c ****         calculate_local_gradient(param, i, n_layers, layer_sizes, layer_inputs, layer_outputs, expe
 1905              		.loc 1 236 35 discriminator 2 view .LVU553
 1906 0230 08F1FF38 		add	r8, r8, #-1
 1907 0234 A6E7     		b	.L102
 1908              	.LVL200:
 1909              	.L109:
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 248:back_propagation.c ****                 param->weight[i][j][k] -= weight_correction[i][j][k];
 1910              		.loc 1 248 17 is_stmt 1 discriminator 3 view .LVU554
 1911              		.loc 1 248 30 is_stmt 0 discriminator 3 view .LVU555
 1912 0236 EB6B     		ldr	r3, [r5, #60]
 1913              		.loc 1 248 33 discriminator 3 view .LVU556
 1914 0238 099A     		ldr	r2, [sp, #36]
 1915 023a 9B58     		ldr	r3, [r3, r2]
 1916              		.loc 1 248 40 discriminator 3 view .LVU557
 1917 023c 079A     		ldr	r2, [sp, #28]
 1918 023e 9B58     		ldr	r3, [r3, r2]
 1919 0240 03EBC80A 		add	r10, r3, r8, lsl #3
 1920              		.loc 1 248 63 discriminator 3 view .LVU558
 1921 0244 56F82730 		ldr	r3, [r6, r7, lsl #2]
 1922              		.loc 1 248 66 discriminator 3 view .LVU559
 1923 0248 9B58     		ldr	r3, [r3, r2]
 1924 024a 03EBC803 		add	r3, r3, r8, lsl #3
 1925              		.loc 1 248 40 discriminator 3 view .LVU560
 1926 024e DAE90001 		ldrd	r0, [r10]
 1927 0252 D3E90023 		ldrd	r2, [r3]
 1928 0256 FFF7FEFF 		bl	__aeabi_dsub
 1929              	.LVL201:
 1930 025a CAE90001 		strd	r0, [r10]
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1931              		.loc 1 247 47 is_stmt 1 discriminator 3 view .LVU561
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1932              		.loc 1 247 48 is_stmt 0 discriminator 3 view .LVU562
 1933 025e 08F10108 		add	r8, r8, #1
 1934              	.LVL202:
 1935              	.L111:
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1936              		.loc 1 247 25 is_stmt 1 discriminator 1 view .LVU563
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1937              		.loc 1 247 13 is_stmt 0 discriminator 1 view .LVU564
 1938 0262 0A9B     		ldr	r3, [sp, #40]
 1939 0264 4345     		cmp	r3, r8
 1940 0266 E6DC     		bgt	.L109
 246:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1941              		.loc 1 246 43 is_stmt 1 discriminator 2 view .LVU565
 246:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1942              		.loc 1 246 44 is_stmt 0 discriminator 2 view .LVU566
 1943 0268 09F10109 		add	r9, r9, #1
 1944              	.LVL203:
 1945              	.L113:
 246:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1946              		.loc 1 246 21 is_stmt 1 discriminator 1 view .LVU567
 246:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1947              		.loc 1 246 9 is_stmt 0 discriminator 1 view .LVU568
 1948 026c 0B9B     		ldr	r3, [sp, #44]
 1949 026e 4B45     		cmp	r3, r9
 1950 0270 08DB     		blt	.L110
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1951              		.loc 1 247 40 view .LVU569
 1952 0272 089B     		ldr	r3, [sp, #32]
 1953 0274 1B68     		ldr	r3, [r3]
 1954 0276 0A93     		str	r3, [sp, #40]
 1955 0278 4FEA8903 		lsl	r3, r9, #2
 1956 027c 0793     		str	r3, [sp, #28]
 247:back_propagation.c ****             for (k = 0; k < layer_sizes[i+1]; k++) {
 1957              		.loc 1 247 20 view .LVU570
 1958 027e 4FF00008 		mov	r8, #0
 1959 0282 EEE7     		b	.L111
 1960              	.L110:
 245:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++) {
 1961              		.loc 1 245 33 is_stmt 1 discriminator 2 view .LVU571
 245:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++) {
 1962              		.loc 1 245 34 is_stmt 0 discriminator 2 view .LVU572
 1963 0284 0137     		adds	r7, r7, #1
 1964              	.LVL204:
 245:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++) {
 1965              		.loc 1 245 34 discriminator 2 view .LVU573
 1966 0286 80E7     		b	.L108
 1967              	.LVL205:
 1968              	.L114:
 249:back_propagation.c ****             }
 250:back_propagation.c ****         }
 251:back_propagation.c ****     }
 252:back_propagation.c **** 
 253:back_propagation.c **** 
 254:back_propagation.c ****     // Free the memory allocated in Heap
 255:back_propagation.c ****     for (i = 0; i < n_layers; i++)
 256:back_propagation.c ****         free(local_gradient[i]);
 1969              		.loc 1 256 9 is_stmt 1 discriminator 3 view .LVU574
 1970 0288 049B     		ldr	r3, [sp, #16]
 1971 028a 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1972 028e FFF7FEFF 		bl	free
 1973              	.LVL206:
 255:back_propagation.c ****         free(local_gradient[i]);
 1974              		.loc 1 255 31 discriminator 3 view .LVU575
 255:back_propagation.c ****         free(local_gradient[i]);
 1975              		.loc 1 255 32 is_stmt 0 discriminator 3 view .LVU576
 1976 0292 0135     		adds	r5, r5, #1
 1977              	.LVL207:
 1978              	.L112:
 255:back_propagation.c ****         free(local_gradient[i]);
 1979              		.loc 1 255 17 is_stmt 1 discriminator 1 view .LVU577
 255:back_propagation.c ****         free(local_gradient[i]);
 1980              		.loc 1 255 5 is_stmt 0 discriminator 1 view .LVU578
 1981 0294 5D45     		cmp	r5, fp
 1982 0296 F7DB     		blt	.L114
 257:back_propagation.c **** 
 258:back_propagation.c ****     free(local_gradient);
 1983              		.loc 1 258 5 is_stmt 1 view .LVU579
 1984 0298 0498     		ldr	r0, [sp, #16]
 1985 029a FFF7FEFF 		bl	free
 1986              	.LVL208:
 259:back_propagation.c **** 
 260:back_propagation.c ****     for (i = 0; i < n_layers - 1; i++)
 1987              		.loc 1 260 5 view .LVU580
 1988              		.loc 1 260 12 is_stmt 0 view .LVU581
 1989 029e 0025     		movs	r5, #0
 1990              	.LVL209:
 1991              	.L115:
 1992              		.loc 1 260 17 is_stmt 1 discriminator 1 view .LVU582
 1993              		.loc 1 260 5 is_stmt 0 discriminator 1 view .LVU583
 1994 02a0 059B     		ldr	r3, [sp, #20]
 1995 02a2 AB42     		cmp	r3, r5
 1996 02a4 1BDC     		bgt	.L122
 261:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 262:back_propagation.c ****             free(weight_correction[i][j]);
 263:back_propagation.c **** 
 264:back_propagation.c ****     for (i = 0; i < n_layers - 1; i++)
 1997              		.loc 1 264 12 view .LVU584
 1998 02a6 0024     		movs	r4, #0
 1999              	.LVL210:
 2000              	.L118:
 2001              		.loc 1 264 17 is_stmt 1 discriminator 1 view .LVU585
 2002              		.loc 1 264 5 is_stmt 0 discriminator 1 view .LVU586
 2003 02a8 059B     		ldr	r3, [sp, #20]
 2004 02aa A342     		cmp	r3, r4
 2005 02ac 19DC     		bgt	.L119
 265:back_propagation.c ****         free(weight_correction[i]);
 266:back_propagation.c **** 
 267:back_propagation.c ****     free(weight_correction);
 2006              		.loc 1 267 5 is_stmt 1 view .LVU587
 2007 02ae 3046     		mov	r0, r6
 2008 02b0 FFF7FEFF 		bl	free
 2009              	.LVL211:
 268:back_propagation.c **** 
 269:back_propagation.c ****     free(expected_output);
 2010              		.loc 1 269 5 view .LVU588
 2011 02b4 0698     		ldr	r0, [sp, #24]
 270:back_propagation.c **** }
 2012              		.loc 1 270 1 is_stmt 0 view .LVU589
 2013 02b6 11B0     		add	sp, sp, #68
 2014              	.LCFI11:
 2015              		.cfi_remember_state
 2016              		.cfi_def_cfa_offset 36
 2017              		@ sp needed
 2018 02b8 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2019              	.LCFI12:
 2020              		.cfi_restore 14
 2021              		.cfi_restore 11
 2022              		.cfi_restore 10
 2023              		.cfi_restore 9
 2024              		.cfi_restore 8
 2025              		.cfi_restore 7
 2026              		.cfi_restore 6
 2027              		.cfi_restore 5
 2028              		.cfi_restore 4
 2029              		.cfi_def_cfa_offset 0
 2030              	.LVL212:
 269:back_propagation.c **** }
 2031              		.loc 1 269 5 view .LVU590
 2032 02bc FFF7FEBF 		b	free
 2033              	.LVL213:
 2034              	.L121:
 2035              	.LCFI13:
 2036              		.cfi_restore_state
 255:back_propagation.c ****         free(local_gradient[i]);
 2037              		.loc 1 255 12 view .LVU591
 2038 02c0 0025     		movs	r5, #0
 2039              	.LVL214:
 255:back_propagation.c ****         free(local_gradient[i]);
 2040              		.loc 1 255 12 view .LVU592
 2041 02c2 E7E7     		b	.L112
 2042              	.LVL215:
 2043              	.L116:
 262:back_propagation.c **** 
 2044              		.loc 1 262 13 is_stmt 1 discriminator 3 view .LVU593
 2045 02c4 56F82530 		ldr	r3, [r6, r5, lsl #2]
 2046 02c8 53F82700 		ldr	r0, [r3, r7, lsl #2]
 2047 02cc FFF7FEFF 		bl	free
 2048              	.LVL216:
 261:back_propagation.c ****             free(weight_correction[i][j]);
 2049              		.loc 1 261 43 discriminator 3 view .LVU594
 261:back_propagation.c ****             free(weight_correction[i][j]);
 2050              		.loc 1 261 44 is_stmt 0 discriminator 3 view .LVU595
 2051 02d0 0137     		adds	r7, r7, #1
 2052              	.LVL217:
 2053              	.L117:
 261:back_propagation.c ****             free(weight_correction[i][j]);
 2054              		.loc 1 261 21 is_stmt 1 discriminator 1 view .LVU596
 261:back_propagation.c ****             free(weight_correction[i][j]);
 2055              		.loc 1 261 9 is_stmt 0 discriminator 1 view .LVU597
 2056 02d2 54F82530 		ldr	r3, [r4, r5, lsl #2]
 2057 02d6 BB42     		cmp	r3, r7
 2058 02d8 F4DA     		bge	.L116
 260:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 2059              		.loc 1 260 35 is_stmt 1 discriminator 2 view .LVU598
 260:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 2060              		.loc 1 260 36 is_stmt 0 discriminator 2 view .LVU599
 2061 02da 0135     		adds	r5, r5, #1
 2062              	.LVL218:
 260:back_propagation.c ****         for (j = 0; j < layer_sizes[i]+1; j++)
 2063              		.loc 1 260 36 discriminator 2 view .LVU600
 2064 02dc E0E7     		b	.L115
 2065              	.LVL219:
 2066              	.L122:
 261:back_propagation.c ****             free(weight_correction[i][j]);
 2067              		.loc 1 261 16 view .LVU601
 2068 02de 0027     		movs	r7, #0
 2069 02e0 F7E7     		b	.L117
 2070              	.LVL220:
 2071              	.L119:
 265:back_propagation.c **** 
 2072              		.loc 1 265 9 is_stmt 1 discriminator 3 view .LVU602
 2073 02e2 56F82400 		ldr	r0, [r6, r4, lsl #2]
 2074 02e6 FFF7FEFF 		bl	free
 2075              	.LVL221:
 264:back_propagation.c ****         free(weight_correction[i]);
 2076              		.loc 1 264 35 discriminator 3 view .LVU603
 264:back_propagation.c ****         free(weight_correction[i]);
 2077              		.loc 1 264 36 is_stmt 0 discriminator 3 view .LVU604
 2078 02ea 0134     		adds	r4, r4, #1
 2079              	.LVL222:
 264:back_propagation.c ****         free(weight_correction[i]);
 2080              		.loc 1 264 36 discriminator 3 view .LVU605
 2081 02ec DCE7     		b	.L118
 2082              	.L124:
 2083 02ee 00BF     		.align	2
 2084              	.L123:
 2085 02f0 0000F03F 		.word	1072693248
 2086              		.cfi_endproc
 2087              	.LFE9:
 2089              		.text
 2090              	.Letext0:
 2091              		.file 2 "parameters.h"
 2092              		.file 3 "c:\\users\\joris\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\stdlib.h"
 2093              		.file 4 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 back_propagation.c
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:16     .text.d_identity:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:24     .text.d_identity:00000000 d_identity
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:71     .text.d_identity:00000018 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:78     .text.d_sigmoid:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:85     .text.d_sigmoid:00000000 d_sigmoid
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:155    .text.d_sigmoid:00000044 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:160    .text.d_tanh:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:167    .text.d_tanh:00000000 d_tanh
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:235    .text.d_tanh:00000040 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:242    .text.d_relu:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:249    .text.d_relu:00000000 d_relu
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:340    .text.d_relu:00000058 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:346    .text.d_softmax:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:353    .text.d_softmax:00000000 d_softmax
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:371    .text.calculate_local_gradient:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:378    .text.calculate_local_gradient:00000000 calculate_local_gradient
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:479    .text.calculate_local_gradient:00000070 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:841    .text.calculate_local_gradient:0000024a $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:846    .text.calculate_local_gradient:00000254 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:1317   .text.calculate_local_gradient:000004c4 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:1321   .text.calculate_local_gradient:000004c8 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:1458   .text.calculate_local_gradient:00000578 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:1464   .text.back_propagation:00000000 $t
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:1471   .text.back_propagation:00000000 back_propagation
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:2085   .text.back_propagation:000002f0 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:485    .text.calculate_local_gradient:00000075 $d
C:\Users\joris\AppData\Local\Temp\ccP3b1cx.s:485    .text.calculate_local_gradient:00000076 $t

UNDEFINED SYMBOLS
__aeabi_dsub
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_dadd
calloc
free
puts
exit
__aeabi_d2iz
